--------------------------------------------------------
--  File created - Monday-June-08-2020   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Type ACTIVITY_COLLECTION
--------------------------------------------------------

  CREATE OR REPLACE TYPE "T3"."ACTIVITY_COLLECTION" IS TABLE OF T3.ACTIVITY_OBJ;

/
--------------------------------------------------------
--  DDL for Type ACTIVITY_DETAILS_COLLECTION
--------------------------------------------------------

  CREATE OR REPLACE TYPE "T3"."ACTIVITY_DETAILS_COLLECTION" 
AS TABLE OF T3.ACTIVITY_DETAILS_OBJ;

/
--------------------------------------------------------
--  DDL for Type ACTIVITY_DETAILS_OBJ
--------------------------------------------------------

  CREATE OR REPLACE TYPE "T3"."ACTIVITY_DETAILS_OBJ" FORCE AS OBJECT 
(
    ID	            NUMBER(10,0)
    ,ACTIVITY_ID    NUMBER(10,0)
    ,LOT_NUMBER     VARCHAR(255)
    ,PACKED_QTY     NUMBER(10,0)
    ,ADJ_QTY        NUMBER(10,0)
    ,IS_NEW         NUMBER(10)
    ,IS_CHANGED     NUMBER(10)
)

/
--------------------------------------------------------
--  DDL for Type ACTIVITY_DOWNTIME_COLLECTION
--------------------------------------------------------

  CREATE OR REPLACE TYPE "T3"."ACTIVITY_DOWNTIME_COLLECTION" 
AS TABLE OF T3.ACTIVITY_DOWNTIME_OBJ;

/
--------------------------------------------------------
--  DDL for Type ACTIVITY_DOWNTIME_OBJ
--------------------------------------------------------

  CREATE OR REPLACE TYPE "T3"."ACTIVITY_DOWNTIME_OBJ" FORCE AS OBJECT 
(
    ID	                NUMBER(10,0)
    ,DOWNTIME_TYPE_ID	NUMBER(10,0)
    ,MINUTES            NUMBER(10,0)
    ,REMARKS            VARCHAR2(255 BYTE)
    ,QUANTITY           NUMBER(10,0)
    ,ACTIVITY_ID        NUMBER(10,0)
    ,CREATED_BY         NUMBER(10,0)
    ,CREATED_AT         VARCHAR2(255 BYTE)
    ,IS_NEW             NUMBER(1)
    ,IS_CHANGED         NUMBER(1)
)

/
--------------------------------------------------------
--  DDL for Type ACTIVITY_OBJ
--------------------------------------------------------

  CREATE OR REPLACE TYPE "T3"."ACTIVITY_OBJ" FORCE is OBJECT (
    ID                  NUMBER(10),
    HEADER_ID           NUMBER(10),
    START_TIME          VARCHAR(255),
    END_TIME            VARCHAR(255),
    DOWNTIME            NUMBER(10),
    REMARKS             VARCHAR(255),
    LAST_UPDATED_BY     NUMBER(10),
    DATE_ENTERED        VARCHAR(255),
    DATE_UPDATED        VARCHAR(255),
    IS_NEW              NUMBER(10),
    IS_CHANGED          NUMBER(10),
    ACTIVITY_DETAILS    T3.ACTIVITY_DETAILS_COLLECTION,
    ACTIVITY_DOWNTIME   T3.ACTIVITY_DOWNTIME_COLLECTION,
    CONSTRUCTOR FUNCTION activity_obj(
        ID              NUMBER,
        HEADER_ID       NUMBER,
        START_TIME      VARCHAR,
        END_TIME        VARCHAR,
        DOWNTIME        NUMBER,
        REMARKS         VARCHAR,
        LAST_UPDATED_BY NUMBER,
        DATE_ENTERED    VARCHAR,
        DATE_UPDATED    VARCHAR,
        IS_NEW          NUMBER,
        IS_CHANGED      NUMBER
    ) RETURN SELF AS RESULT
);

/
--------------------------------------------------------
--  DDL for Type HEADER_OBJ
--------------------------------------------------------

  CREATE OR REPLACE TYPE "T3"."HEADER_OBJ" FORCE is OBJECT (
    ID                  NUMBER(10),
    BARCODE             VARCHAR2(255),
    ACTUAL_START        VARCHAR2(255),
    ACTUAL_END          VARCHAR2(255),
    STATUS              VARCHAR2(255),
    PO_NUMBER           VARCHAR2(255),
    CONTROL_NUMBER      VARCHAR2(255),
    SHIPPING_DATE       VARCHAR2(255),
    ORDER_QUANTITY      NUMBER(10),
    CUSTOMER            VARCHAR2(255),
    CUSTOMER_CODE       VARCHAR2(255),
    CUSTOMER_SPEC       VARCHAR2(255),
    OLD_CODE            VARCHAR2(255),
    INTERNAL_CODE       VARCHAR2(255),
    PRODUCT_DESCRIPTION VARCHAR2(255),
    SHIFT               VARCHAR2(255),
    SCHEDULE_DATE_START VARCHAR2(255),
    SCHEDULE_DATE_END   VARCHAR2(255),
    IS_NEW              NUMBER(10),
    IS_CHANGED          NUMBER(10)
);
--create or replace TYPE ACTIVITY_COLLECTION IS TABLE OF RECORD ();

/
--------------------------------------------------------
--  DDL for Type HEADER_RECORD
--------------------------------------------------------

  CREATE OR REPLACE TYPE "T3"."HEADER_RECORD" FORCE is OBJECT (
    ID                  NUMBER(10),
    BARCODE             VARCHAR2(255),
    ACTUAL_START        VARCHAR2(255),
    ACTUAL_END          VARCHAR2(255),
    STATUS              VARCHAR2(255),
    PO_NUMBER           VARCHAR2(255),
    CONTROL_NUMBER      VARCHAR2(255),
    SHIPPING_DATE       VARCHAR2(255),
    ORDER_QUANTITY      NUMBER(10),
    CUSTOMER            VARCHAR2(255),
    CUSTOMER_CODE       VARCHAR2(255),
    CUSTOMER_SPEC       VARCHAR2(255),
    OLD_CODE            VARCHAR2(255),
    INTERNAL_CODE       VARCHAR2(255),
    PRODUCT_DESCRIPTION VARCHAR2(255)
);
--create or replace TYPE ACTIVITY_COLLECTION IS TABLE OF RECORD ();

/
--------------------------------------------------------
--  DDL for Type MANPOWER_COLLECTION
--------------------------------------------------------

  CREATE OR REPLACE TYPE "T3"."MANPOWER_COLLECTION" IS TABLE OF T3.MANPOWER_OBJ;

/
--------------------------------------------------------
--  DDL for Type MANPOWER_OBJ
--------------------------------------------------------

  CREATE OR REPLACE TYPE "T3"."MANPOWER_OBJ" FORCE AS OBJECT 
(
    ID              NUMBER(10),
    POSITION_ID     NUMBER(10),
    MANPOWER_ID     NUMBER(10),
    START_TIME      VARCHAR(255),
    END_TIME        VARCHAR(255),
    REMARKS         VARCHAR(255),
    LAST_UPDATED_BY NUMBER(10),
    DATE_ENTERED    VARCHAR(255),
    DATE_UPDATED    VARCHAR(255),
    HEADER_ID       NUMBER(10)
)

/
--------------------------------------------------------
--  DDL for Type MATERIAL_COLLECTION
--------------------------------------------------------

  CREATE OR REPLACE TYPE "T3"."MATERIAL_COLLECTION" IS TABLE OF T3.MATERIAL_OBJ;

/
--------------------------------------------------------
--  DDL for Type MATERIAL_OBJ
--------------------------------------------------------

  CREATE OR REPLACE TYPE "T3"."MATERIAL_OBJ" FORCE AS OBJECT 
(
    ID              NUMBER(10),
    QUANTITY        NUMBER(10),
    STANDARD        NUMBER(10),
    REQUIREMENTS    NUMBER(10),
    USED            NUMBER(10),
    REJECT          NUMBER(10),
    REMARKS         VARCHAR(255),
    LAST_UPDATED_BY NUMBER(10),
    DATE_ENTERED    VARCHAR(255),
    DATE_UPDATED    VARCHAR(255),
    MATERIAL_CODE   VARCHAR(255),
    HEADER_ID       NUMBER(10),
    ITEM_CATEGORY	VARCHAR2(255 BYTE),
    BOX_TYPE	    VARCHAR2(255 BYTE),
    MAX_QTY	        NUMBER(10,0),
    MATERIAL_DESC	VARCHAR2(255 BYTE),
    IS_CHANGED      NUMBER(1),
    IS_NEW          NUMBER(1)
)

/
--------------------------------------------------------
--  DDL for Type SAMPLE_COLLECTION
--------------------------------------------------------

  CREATE OR REPLACE TYPE "T3"."SAMPLE_COLLECTION" IS TABLE OF NUMBER;

/
--------------------------------------------------------
--  DDL for Sequence DEMO_CUST_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "T3"."DEMO_CUST_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DEMO_ORDER_ITEMS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "T3"."DEMO_ORDER_ITEMS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DEMO_ORD_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "T3"."DEMO_ORD_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 11 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DEMO_PROD_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "T3"."DEMO_PROD_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DEMO_USERS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "T3"."DEMO_USERS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOWNTIME_TYPES_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "T3"."DOWNTIME_TYPES_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TBL_ACTIVITY_DETAILS_PK_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "T3"."TBL_ACTIVITY_DETAILS_PK_SEQ"  MINVALUE 1 MAXVALUE 999999999999 INCREMENT BY 1 START WITH 121 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TBL_ACTIVITY_DOWNTIME_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "T3"."TBL_ACTIVITY_DOWNTIME_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TBL_ACTIVITY_PK_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "T3"."TBL_ACTIVITY_PK_SEQ"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 381 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TBL_HEADER_PK_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "T3"."TBL_HEADER_PK_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 241 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TBL_MANPOWER_PK_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "T3"."TBL_MANPOWER_PK_SEQ"  MINVALUE 1 MAXVALUE 999999999999999 INCREMENT BY 1 START WITH 141 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TBL_MATERIAL_PK_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "T3"."TBL_MATERIAL_PK_SEQ"  MINVALUE 1 MAXVALUE 9999999999999 INCREMENT BY 1 START WITH 181 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table APEX$_ACL
--------------------------------------------------------

  CREATE TABLE "T3"."APEX$_ACL" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"USERNAME" VARCHAR2(255 BYTE), 
	"PRIV" VARCHAR2(1 BYTE), 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_FILES
--------------------------------------------------------

  CREATE TABLE "T3"."APEX$_WS_FILES" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"DATA_GRID_ID" NUMBER, 
	"ROW_ID" NUMBER, 
	"WEBPAGE_ID" NUMBER, 
	"COMPONENT_LEVEL" VARCHAR2(30 BYTE), 
	"NAME" VARCHAR2(255 BYTE), 
	"IMAGE_ALIAS" VARCHAR2(255 BYTE), 
	"IMAGE_ATTRIBUTES" VARCHAR2(255 BYTE), 
	"CONTENT" BLOB, 
	"CONTENT_LAST_UPDATE" DATE, 
	"MIME_TYPE" VARCHAR2(255 BYTE), 
	"CONTENT_CHARSET" VARCHAR2(255 BYTE), 
	"CONTENT_FILENAME" VARCHAR2(500 BYTE), 
	"DESCRIPTION" VARCHAR2(4000 BYTE), 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("CONTENT") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_HISTORY
--------------------------------------------------------

  CREATE TABLE "T3"."APEX$_WS_HISTORY" 
   (	"ROW_ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"DATA_GRID_ID" NUMBER, 
	"COLUMN_NAME" VARCHAR2(255 BYTE), 
	"OLD_VALUE" VARCHAR2(4000 BYTE), 
	"NEW_VALUE" VARCHAR2(4000 BYTE), 
	"APPLICATION_USER_ID" VARCHAR2(255 BYTE), 
	"CHANGE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_LINKS
--------------------------------------------------------

  CREATE TABLE "T3"."APEX$_WS_LINKS" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"DATA_GRID_ID" NUMBER, 
	"ROW_ID" NUMBER, 
	"WEBPAGE_ID" NUMBER, 
	"COMPONENT_LEVEL" VARCHAR2(30 BYTE), 
	"TAGS" VARCHAR2(4000 BYTE), 
	"SHOW_ON_HOMEPAGE" VARCHAR2(1 BYTE), 
	"LINK_NAME" VARCHAR2(255 BYTE), 
	"URL" VARCHAR2(4000 BYTE), 
	"LINK_DESCRIPTION" VARCHAR2(4000 BYTE), 
	"DISPLAY_SEQUENCE" NUMBER, 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_NOTES
--------------------------------------------------------

  CREATE TABLE "T3"."APEX$_WS_NOTES" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"DATA_GRID_ID" NUMBER, 
	"ROW_ID" NUMBER, 
	"WEBPAGE_ID" NUMBER, 
	"COMPONENT_LEVEL" VARCHAR2(30 BYTE), 
	"CONTENT" CLOB, 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("CONTENT") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_ROWS
--------------------------------------------------------

  CREATE TABLE "T3"."APEX$_WS_ROWS" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"DATA_GRID_ID" NUMBER, 
	"UNIQUE_VALUE" VARCHAR2(255 BYTE), 
	"TAGS" VARCHAR2(4000 BYTE), 
	"PARENT_ROW_ID" NUMBER, 
	"OWNER" VARCHAR2(255 BYTE), 
	"GEOCODE" VARCHAR2(512 BYTE), 
	"LOAD_ORDER" NUMBER, 
	"CHANGE_COUNT" NUMBER, 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE), 
	"C001" VARCHAR2(4000 BYTE), 
	"C002" VARCHAR2(4000 BYTE), 
	"C003" VARCHAR2(4000 BYTE), 
	"C004" VARCHAR2(4000 BYTE), 
	"C005" VARCHAR2(4000 BYTE), 
	"C006" VARCHAR2(4000 BYTE), 
	"C007" VARCHAR2(4000 BYTE), 
	"C008" VARCHAR2(4000 BYTE), 
	"C009" VARCHAR2(4000 BYTE), 
	"C010" VARCHAR2(4000 BYTE), 
	"C011" VARCHAR2(4000 BYTE), 
	"C012" VARCHAR2(4000 BYTE), 
	"C013" VARCHAR2(4000 BYTE), 
	"C014" VARCHAR2(4000 BYTE), 
	"C015" VARCHAR2(4000 BYTE), 
	"C016" VARCHAR2(4000 BYTE), 
	"C017" VARCHAR2(4000 BYTE), 
	"C018" VARCHAR2(4000 BYTE), 
	"C019" VARCHAR2(4000 BYTE), 
	"C020" VARCHAR2(4000 BYTE), 
	"C021" VARCHAR2(4000 BYTE), 
	"C022" VARCHAR2(4000 BYTE), 
	"C023" VARCHAR2(4000 BYTE), 
	"C024" VARCHAR2(4000 BYTE), 
	"C025" VARCHAR2(4000 BYTE), 
	"C026" VARCHAR2(4000 BYTE), 
	"C027" VARCHAR2(4000 BYTE), 
	"C028" VARCHAR2(4000 BYTE), 
	"C029" VARCHAR2(4000 BYTE), 
	"C030" VARCHAR2(4000 BYTE), 
	"C031" VARCHAR2(4000 BYTE), 
	"C032" VARCHAR2(4000 BYTE), 
	"C033" VARCHAR2(4000 BYTE), 
	"C034" VARCHAR2(4000 BYTE), 
	"C035" VARCHAR2(4000 BYTE), 
	"C036" VARCHAR2(4000 BYTE), 
	"C037" VARCHAR2(4000 BYTE), 
	"C038" VARCHAR2(4000 BYTE), 
	"C039" VARCHAR2(4000 BYTE), 
	"C040" VARCHAR2(4000 BYTE), 
	"C041" VARCHAR2(4000 BYTE), 
	"C042" VARCHAR2(4000 BYTE), 
	"C043" VARCHAR2(4000 BYTE), 
	"C044" VARCHAR2(4000 BYTE), 
	"C045" VARCHAR2(4000 BYTE), 
	"C046" VARCHAR2(4000 BYTE), 
	"C047" VARCHAR2(4000 BYTE), 
	"C048" VARCHAR2(4000 BYTE), 
	"C049" VARCHAR2(4000 BYTE), 
	"C050" VARCHAR2(4000 BYTE), 
	"N001" NUMBER, 
	"N002" NUMBER, 
	"N003" NUMBER, 
	"N004" NUMBER, 
	"N005" NUMBER, 
	"N006" NUMBER, 
	"N007" NUMBER, 
	"N008" NUMBER, 
	"N009" NUMBER, 
	"N010" NUMBER, 
	"N011" NUMBER, 
	"N012" NUMBER, 
	"N013" NUMBER, 
	"N014" NUMBER, 
	"N015" NUMBER, 
	"N016" NUMBER, 
	"N017" NUMBER, 
	"N018" NUMBER, 
	"N019" NUMBER, 
	"N020" NUMBER, 
	"N021" NUMBER, 
	"N022" NUMBER, 
	"N023" NUMBER, 
	"N024" NUMBER, 
	"N025" NUMBER, 
	"N026" NUMBER, 
	"N027" NUMBER, 
	"N028" NUMBER, 
	"N029" NUMBER, 
	"N030" NUMBER, 
	"N031" NUMBER, 
	"N032" NUMBER, 
	"N033" NUMBER, 
	"N034" NUMBER, 
	"N035" NUMBER, 
	"N036" NUMBER, 
	"N037" NUMBER, 
	"N038" NUMBER, 
	"N039" NUMBER, 
	"N040" NUMBER, 
	"N041" NUMBER, 
	"N042" NUMBER, 
	"N043" NUMBER, 
	"N044" NUMBER, 
	"N045" NUMBER, 
	"N046" NUMBER, 
	"N047" NUMBER, 
	"N048" NUMBER, 
	"N049" NUMBER, 
	"N050" NUMBER, 
	"D001" DATE, 
	"D002" DATE, 
	"D003" DATE, 
	"D004" DATE, 
	"D005" DATE, 
	"D006" DATE, 
	"D007" DATE, 
	"D008" DATE, 
	"D009" DATE, 
	"D010" DATE, 
	"D011" DATE, 
	"D012" DATE, 
	"D013" DATE, 
	"D014" DATE, 
	"D015" DATE, 
	"D016" DATE, 
	"D017" DATE, 
	"D018" DATE, 
	"D019" DATE, 
	"D020" DATE, 
	"D021" DATE, 
	"D022" DATE, 
	"D023" DATE, 
	"D024" DATE, 
	"D025" DATE, 
	"D026" DATE, 
	"D027" DATE, 
	"D028" DATE, 
	"D029" DATE, 
	"D030" DATE, 
	"D031" DATE, 
	"D032" DATE, 
	"D033" DATE, 
	"D034" DATE, 
	"D035" DATE, 
	"D036" DATE, 
	"D037" DATE, 
	"D038" DATE, 
	"D039" DATE, 
	"D040" DATE, 
	"D041" DATE, 
	"D042" DATE, 
	"D043" DATE, 
	"D044" DATE, 
	"D045" DATE, 
	"D046" DATE, 
	"D047" DATE, 
	"D048" DATE, 
	"D049" DATE, 
	"D050" DATE, 
	"CLOB001" CLOB, 
	"SEARCH_CLOB" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("CLOB001") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("SEARCH_CLOB") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_TAGS
--------------------------------------------------------

  CREATE TABLE "T3"."APEX$_WS_TAGS" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"DATA_GRID_ID" NUMBER, 
	"ROW_ID" NUMBER, 
	"WEBPAGE_ID" NUMBER, 
	"COMPONENT_LEVEL" VARCHAR2(30 BYTE), 
	"TAG" VARCHAR2(4000 BYTE), 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_WEBPG_SECTIONS
--------------------------------------------------------

  CREATE TABLE "T3"."APEX$_WS_WEBPG_SECTIONS" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"WEBPAGE_ID" NUMBER, 
	"DISPLAY_SEQUENCE" NUMBER, 
	"SECTION_TYPE" VARCHAR2(30 BYTE), 
	"TITLE" VARCHAR2(4000 BYTE), 
	"CONTENT" CLOB, 
	"CONTENT_UPPER" CLOB, 
	"NAV_START_WEBPAGE_ID" NUMBER, 
	"NAV_MAX_LEVEL" NUMBER, 
	"NAV_INCLUDE_LINK" VARCHAR2(1 BYTE), 
	"DATA_GRID_ID" NUMBER, 
	"REPORT_ID" NUMBER, 
	"DATA_SECTION_STYLE" NUMBER, 
	"CHART_TYPE" VARCHAR2(255 BYTE), 
	"CHART_3D" VARCHAR2(1 BYTE), 
	"CHART_LABEL" VARCHAR2(255 BYTE), 
	"LABEL_AXIS_TITLE" VARCHAR2(255 BYTE), 
	"CHART_VALUE" VARCHAR2(255 BYTE), 
	"VALUE_AXIS_TITLE" VARCHAR2(255 BYTE), 
	"CHART_AGGREGATE" VARCHAR2(255 BYTE), 
	"CHART_SORTING" VARCHAR2(255 BYTE), 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("CONTENT") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("CONTENT_UPPER") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_WEBPG_SECTION_HISTORY
--------------------------------------------------------

  CREATE TABLE "T3"."APEX$_WS_WEBPG_SECTION_HISTORY" 
   (	"SECTION_ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"WEBPAGE_ID" NUMBER, 
	"OLD_DISPLAY_SEQUENCE" NUMBER, 
	"NEW_DISPLAY_SEQUENCE" NUMBER, 
	"OLD_TITLE" VARCHAR2(4000 BYTE), 
	"NEW_TITLE" VARCHAR2(4000 BYTE), 
	"OLD_CONTENT" CLOB, 
	"NEW_CONTENT" CLOB, 
	"APPLICATION_USER_ID" VARCHAR2(255 BYTE), 
	"CHANGE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("OLD_CONTENT") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("NEW_CONTENT") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table DEMO_CUSTOMERS
--------------------------------------------------------

  CREATE TABLE "T3"."DEMO_CUSTOMERS" 
   (	"CUSTOMER_ID" NUMBER, 
	"CUST_FIRST_NAME" VARCHAR2(20 BYTE), 
	"CUST_LAST_NAME" VARCHAR2(20 BYTE), 
	"CUST_STREET_ADDRESS1" VARCHAR2(60 BYTE), 
	"CUST_STREET_ADDRESS2" VARCHAR2(60 BYTE), 
	"CUST_CITY" VARCHAR2(30 BYTE), 
	"CUST_STATE" VARCHAR2(2 BYTE), 
	"CUST_POSTAL_CODE" VARCHAR2(10 BYTE), 
	"PHONE_NUMBER1" VARCHAR2(25 BYTE), 
	"PHONE_NUMBER2" VARCHAR2(25 BYTE), 
	"CREDIT_LIMIT" NUMBER(9,2), 
	"CUST_EMAIL" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DEMO_ORDERS
--------------------------------------------------------

  CREATE TABLE "T3"."DEMO_ORDERS" 
   (	"ORDER_ID" NUMBER, 
	"CUSTOMER_ID" NUMBER, 
	"ORDER_TOTAL" NUMBER(8,2), 
	"ORDER_TIMESTAMP" DATE, 
	"USER_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DEMO_ORDER_ITEMS
--------------------------------------------------------

  CREATE TABLE "T3"."DEMO_ORDER_ITEMS" 
   (	"ORDER_ITEM_ID" NUMBER(3,0), 
	"ORDER_ID" NUMBER, 
	"PRODUCT_ID" NUMBER, 
	"UNIT_PRICE" NUMBER(8,2), 
	"QUANTITY" NUMBER(8,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DEMO_PRODUCT_INFO
--------------------------------------------------------

  CREATE TABLE "T3"."DEMO_PRODUCT_INFO" 
   (	"PRODUCT_ID" NUMBER, 
	"PRODUCT_NAME" VARCHAR2(50 BYTE), 
	"PRODUCT_DESCRIPTION" VARCHAR2(2000 BYTE), 
	"CATEGORY" VARCHAR2(30 BYTE), 
	"PRODUCT_AVAIL" VARCHAR2(1 BYTE), 
	"LIST_PRICE" NUMBER(8,2), 
	"PRODUCT_IMAGE" BLOB, 
	"MIMETYPE" VARCHAR2(255 BYTE), 
	"FILENAME" VARCHAR2(400 BYTE), 
	"IMAGE_LAST_UPDATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("PRODUCT_IMAGE") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table DEMO_STATES
--------------------------------------------------------

  CREATE TABLE "T3"."DEMO_STATES" 
   (	"ST" VARCHAR2(30 BYTE), 
	"STATE_NAME" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DEMO_USERS
--------------------------------------------------------

  CREATE TABLE "T3"."DEMO_USERS" 
   (	"USER_ID" NUMBER, 
	"USER_NAME" VARCHAR2(100 BYTE), 
	"PASSWORD" VARCHAR2(4000 BYTE), 
	"CREATED_ON" DATE, 
	"QUOTA" NUMBER, 
	"PRODUCTS" CHAR(1 BYTE), 
	"EXPIRES_ON" DATE, 
	"ADMIN_USER" CHAR(1 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DEPT
--------------------------------------------------------

  CREATE TABLE "T3"."DEPT" 
   (	"DEPTNO" NUMBER(2,0), 
	"DNAME" VARCHAR2(14 BYTE), 
	"LOC" VARCHAR2(13 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table EMP
--------------------------------------------------------

  CREATE TABLE "T3"."EMP" 
   (	"EMPNO" NUMBER(4,0), 
	"ENAME" VARCHAR2(10 BYTE), 
	"JOB" VARCHAR2(9 BYTE), 
	"MGR" NUMBER(4,0), 
	"HIREDATE" DATE, 
	"SAL" NUMBER(7,2), 
	"COMM" NUMBER(7,2), 
	"DEPTNO" NUMBER(2,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBL_ACTIVITY
--------------------------------------------------------

  CREATE TABLE "T3"."TBL_ACTIVITY" 
   (	"ID" NUMBER(10,0), 
	"HEADER_ID" NUMBER(10,0), 
	"START_TIME" DATE, 
	"END_TIME" DATE, 
	"DOWNTIME" NUMBER(10,0), 
	"REMARKS" VARCHAR2(255 BYTE), 
	"LAST_UPDATED_BY" NUMBER(10,0), 
	"DATE_ENTERED" DATE, 
	"DATE_UPDATED" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBL_ACTIVITY_DETAILS
--------------------------------------------------------

  CREATE TABLE "T3"."TBL_ACTIVITY_DETAILS" 
   (	"ID" NUMBER(10,0), 
	"ACTIVITY_ID" NUMBER(10,0), 
	"LOT_NUMBER" VARCHAR2(255 BYTE), 
	"PACKED_QTY" NUMBER(10,0) DEFAULT 0, 
	"ADJ_QTY" NUMBER(10,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBL_ACTIVITY_DOWNTIME
--------------------------------------------------------

  CREATE TABLE "T3"."TBL_ACTIVITY_DOWNTIME" 
   (	"ID" NUMBER(10,0), 
	"DOWNTIME_TYPE_ID" NUMBER(10,0), 
	"MINUTES" NUMBER(10,0), 
	"REMARKS" VARCHAR2(255 BYTE), 
	"QUANTITY" NUMBER(10,0), 
	"ACTIVITY_ID" NUMBER(10,0), 
	"CREATED_BY" NUMBER(10,0), 
	"CREATED_AT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBL_DOWNTIME_TYPES
--------------------------------------------------------

  CREATE TABLE "T3"."TBL_DOWNTIME_TYPES" 
   (	"ID" NUMBER(10,0), 
	"NAME" VARCHAR2(255 BYTE), 
	"DEFAULT_MINUTES" NUMBER(10,0), 
	"QUANTITY" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBL_HEADER
--------------------------------------------------------

  CREATE TABLE "T3"."TBL_HEADER" 
   (	"ID" NUMBER(10,0), 
	"BARCODE" VARCHAR2(255 BYTE), 
	"ACTUAL_START" DATE, 
	"ACTUAL_END" DATE, 
	"STATUS" VARCHAR2(255 BYTE), 
	"PO_NUMBER" VARCHAR2(255 BYTE), 
	"CONTROL_NUMBER" VARCHAR2(255 BYTE), 
	"SHIPPING_DATE" DATE, 
	"ORDER_QUANTITY" NUMBER(10,0), 
	"CUSTOMER" VARCHAR2(255 BYTE), 
	"CUSTOMER_CODE" VARCHAR2(255 BYTE), 
	"CUSTOMER_SPEC" VARCHAR2(255 BYTE), 
	"OLD_CODE" VARCHAR2(255 BYTE), 
	"INTERNAL_CODE" VARCHAR2(255 BYTE), 
	"PRODUCT_DESCRIPTION" VARCHAR2(255 BYTE), 
	"SHIFT" VARCHAR2(255 BYTE), 
	"SCHEDULE_DATE_START" DATE, 
	"SCHEDULE_DATE_END" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBL_MANPOWER
--------------------------------------------------------

  CREATE TABLE "T3"."TBL_MANPOWER" 
   (	"ID" NUMBER(10,0), 
	"POSITION_ID" NUMBER(10,0), 
	"MANPOWER_ID" NUMBER(10,0), 
	"START_TIME" DATE, 
	"END_TIME" DATE, 
	"REMARKS" VARCHAR2(255 BYTE), 
	"LAST_UPDATED_BY" NUMBER(10,0), 
	"DATE_ENTERED" DATE, 
	"DATE_UPDATED" DATE, 
	"HEADER_ID" NUMBER(10,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TBL_MATERIAL
--------------------------------------------------------

  CREATE TABLE "T3"."TBL_MATERIAL" 
   (	"ID" NUMBER(10,0), 
	"QUANTITY" NUMBER(10,0), 
	"STANDARD" NUMBER(10,0), 
	"REQUIREMENTS" NUMBER(10,0), 
	"USED" NUMBER(10,0), 
	"REJECT" NUMBER(10,0), 
	"REMARKS" VARCHAR2(255 BYTE), 
	"LAST_UPDATED_BY" NUMBER(10,0), 
	"DATE_ENTERED" DATE, 
	"DATE_UPDATED" DATE, 
	"MATERIAL_CODE" VARCHAR2(255 BYTE), 
	"HEADER_ID" NUMBER(10,0), 
	"ITEM_CATEGORY" VARCHAR2(255 BYTE), 
	"BOX_TYPE" VARCHAR2(255 BYTE), 
	"MAX_QTY" NUMBER(10,0), 
	"MATERIAL_DESC" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
REM INSERTING into T3.APEX$_ACL
SET DEFINE OFF;
REM INSERTING into T3.APEX$_WS_FILES
SET DEFINE OFF;
REM INSERTING into T3.APEX$_WS_HISTORY
SET DEFINE OFF;
REM INSERTING into T3.APEX$_WS_LINKS
SET DEFINE OFF;
REM INSERTING into T3.APEX$_WS_NOTES
SET DEFINE OFF;
REM INSERTING into T3.APEX$_WS_ROWS
SET DEFINE OFF;
REM INSERTING into T3.APEX$_WS_TAGS
SET DEFINE OFF;
REM INSERTING into T3.APEX$_WS_WEBPG_SECTIONS
SET DEFINE OFF;
REM INSERTING into T3.APEX$_WS_WEBPG_SECTION_HISTORY
SET DEFINE OFF;
REM INSERTING into T3.DEMO_CUSTOMERS
SET DEFINE OFF;
Insert into T3.DEMO_CUSTOMERS (CUSTOMER_ID,CUST_FIRST_NAME,CUST_LAST_NAME,CUST_STREET_ADDRESS1,CUST_STREET_ADDRESS2,CUST_CITY,CUST_STATE,CUST_POSTAL_CODE,PHONE_NUMBER1,PHONE_NUMBER2,CREDIT_LIMIT,CUST_EMAIL) values (1,'John','Dulles','45020 Aviation Drive',null,'Sterling','VA','20166','703-555-2143',null,1000,null);
Insert into T3.DEMO_CUSTOMERS (CUSTOMER_ID,CUST_FIRST_NAME,CUST_LAST_NAME,CUST_STREET_ADDRESS1,CUST_STREET_ADDRESS2,CUST_CITY,CUST_STATE,CUST_POSTAL_CODE,PHONE_NUMBER1,PHONE_NUMBER2,CREDIT_LIMIT,CUST_EMAIL) values (2,'William','Hartsfield','6000 North Terminal Parkway',null,'Atlanta','GA','30320','404-555-3285',null,1000,null);
Insert into T3.DEMO_CUSTOMERS (CUSTOMER_ID,CUST_FIRST_NAME,CUST_LAST_NAME,CUST_STREET_ADDRESS1,CUST_STREET_ADDRESS2,CUST_CITY,CUST_STATE,CUST_POSTAL_CODE,PHONE_NUMBER1,PHONE_NUMBER2,CREDIT_LIMIT,CUST_EMAIL) values (3,'Edward','Logan','1 Harborside Drive',null,'East Boston','MA','02128','617-555-3295',null,1000,null);
Insert into T3.DEMO_CUSTOMERS (CUSTOMER_ID,CUST_FIRST_NAME,CUST_LAST_NAME,CUST_STREET_ADDRESS1,CUST_STREET_ADDRESS2,CUST_CITY,CUST_STATE,CUST_POSTAL_CODE,PHONE_NUMBER1,PHONE_NUMBER2,CREDIT_LIMIT,CUST_EMAIL) values (4,'Edward "Butch"','OHare','10000 West OHare',null,'Chicago','IL','60666','773-555-7693',null,1000,null);
Insert into T3.DEMO_CUSTOMERS (CUSTOMER_ID,CUST_FIRST_NAME,CUST_LAST_NAME,CUST_STREET_ADDRESS1,CUST_STREET_ADDRESS2,CUST_CITY,CUST_STATE,CUST_POSTAL_CODE,PHONE_NUMBER1,PHONE_NUMBER2,CREDIT_LIMIT,CUST_EMAIL) values (5,'Fiorello','LaGuardia','Hangar Center','Third Floor','Flushing','NY','11371','212-555-3923',null,1000,null);
Insert into T3.DEMO_CUSTOMERS (CUSTOMER_ID,CUST_FIRST_NAME,CUST_LAST_NAME,CUST_STREET_ADDRESS1,CUST_STREET_ADDRESS2,CUST_CITY,CUST_STATE,CUST_POSTAL_CODE,PHONE_NUMBER1,PHONE_NUMBER2,CREDIT_LIMIT,CUST_EMAIL) values (6,'Albert','Lambert','10701 Lambert International Blvd.',null,'St. Louis','MO','63145','314-555-4022',null,1000,null);
Insert into T3.DEMO_CUSTOMERS (CUSTOMER_ID,CUST_FIRST_NAME,CUST_LAST_NAME,CUST_STREET_ADDRESS1,CUST_STREET_ADDRESS2,CUST_CITY,CUST_STATE,CUST_POSTAL_CODE,PHONE_NUMBER1,PHONE_NUMBER2,CREDIT_LIMIT,CUST_EMAIL) values (7,'Eugene','Bradley','Schoephoester Road',null,'Windsor Locks','CT','06096','860-555-1835',null,1000,null);
REM INSERTING into T3.DEMO_ORDERS
SET DEFINE OFF;
Insert into T3.DEMO_ORDERS (ORDER_ID,CUSTOMER_ID,ORDER_TOTAL,ORDER_TIMESTAMP,USER_ID) values (1,7,1890,to_date('25-FEB-2020 09:20:21','DD-MON-YYYY HH24:MI:SS'),2);
Insert into T3.DEMO_ORDERS (ORDER_ID,CUSTOMER_ID,ORDER_TOTAL,ORDER_TIMESTAMP,USER_ID) values (2,1,2380,to_date('22-FEB-2020 09:20:21','DD-MON-YYYY HH24:MI:SS'),2);
Insert into T3.DEMO_ORDERS (ORDER_ID,CUSTOMER_ID,ORDER_TOTAL,ORDER_TIMESTAMP,USER_ID) values (3,2,1640,to_date('16-FEB-2020 09:20:21','DD-MON-YYYY HH24:MI:SS'),2);
Insert into T3.DEMO_ORDERS (ORDER_ID,CUSTOMER_ID,ORDER_TOTAL,ORDER_TIMESTAMP,USER_ID) values (4,5,1090,to_date('08-FEB-2020 09:20:21','DD-MON-YYYY HH24:MI:SS'),2);
Insert into T3.DEMO_ORDERS (ORDER_ID,CUSTOMER_ID,ORDER_TOTAL,ORDER_TIMESTAMP,USER_ID) values (5,6,950,to_date('03-FEB-2020 09:20:21','DD-MON-YYYY HH24:MI:SS'),2);
Insert into T3.DEMO_ORDERS (ORDER_ID,CUSTOMER_ID,ORDER_TOTAL,ORDER_TIMESTAMP,USER_ID) values (6,3,1515,to_date('29-JAN-2020 09:20:21','DD-MON-YYYY HH24:MI:SS'),2);
Insert into T3.DEMO_ORDERS (ORDER_ID,CUSTOMER_ID,ORDER_TOTAL,ORDER_TIMESTAMP,USER_ID) values (7,3,905,to_date('19-JAN-2020 09:20:21','DD-MON-YYYY HH24:MI:SS'),2);
Insert into T3.DEMO_ORDERS (ORDER_ID,CUSTOMER_ID,ORDER_TOTAL,ORDER_TIMESTAMP,USER_ID) values (8,4,1060,to_date('17-JAN-2020 09:20:21','DD-MON-YYYY HH24:MI:SS'),2);
Insert into T3.DEMO_ORDERS (ORDER_ID,CUSTOMER_ID,ORDER_TOTAL,ORDER_TIMESTAMP,USER_ID) values (9,2,730,to_date('06-JAN-2020 09:20:21','DD-MON-YYYY HH24:MI:SS'),2);
Insert into T3.DEMO_ORDERS (ORDER_ID,CUSTOMER_ID,ORDER_TOTAL,ORDER_TIMESTAMP,USER_ID) values (10,7,870,to_date('23-DEC-2019 09:20:21','DD-MON-YYYY HH24:MI:SS'),2);
REM INSERTING into T3.DEMO_ORDER_ITEMS
SET DEFINE OFF;
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (1,1,1,50,10);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (2,1,2,80,8);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (3,1,3,150,5);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (4,2,1,50,3);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (5,2,2,80,3);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (6,2,3,150,3);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (7,2,4,60,3);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (8,2,5,80,3);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (9,2,6,120,2);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (10,2,7,30,2);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (11,2,8,125,4);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (12,2,9,110,2);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (13,2,10,50,2);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (14,3,4,60,4);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (15,3,5,80,4);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (16,3,6,120,4);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (17,3,8,125,4);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (18,3,10,50,2);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (19,4,6,120,2);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (20,4,7,30,6);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (21,4,8,125,2);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (22,4,9,110,2);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (23,4,10,50,4);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (24,5,1,50,3);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (25,5,2,80,2);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (26,5,3,150,2);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (27,5,4,60,3);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (28,5,5,80,2);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (29,6,3,150,3);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (30,6,6,120,3);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (31,6,8,125,3);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (32,6,9,110,3);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (33,7,1,50,2);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (34,7,2,80,2);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (35,7,4,60,2);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (36,7,5,80,2);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (37,7,7,30,3);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (38,7,8,125,1);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (39,7,10,50,3);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (40,8,2,80,2);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (41,8,3,150,3);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (42,8,6,120,1);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (43,8,9,110,3);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (44,9,4,60,4);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (45,9,5,80,3);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (46,9,8,125,2);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (47,10,1,50,5);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (48,10,2,80,4);
Insert into T3.DEMO_ORDER_ITEMS (ORDER_ITEM_ID,ORDER_ID,PRODUCT_ID,UNIT_PRICE,QUANTITY) values (49,10,3,150,2);
REM INSERTING into T3.DEMO_PRODUCT_INFO
SET DEFINE OFF;
Insert into T3.DEMO_PRODUCT_INFO (PRODUCT_ID,PRODUCT_NAME,PRODUCT_DESCRIPTION,CATEGORY,PRODUCT_AVAIL,LIST_PRICE,MIMETYPE,FILENAME,IMAGE_LAST_UPDATE) values (9,'Mens Shoes','Leather upper and lower lace up shoes','Mens','Y',110,'image/jpeg','shoes.jpg',to_date('26-FEB-2020 09:20:21','DD-MON-YYYY HH24:MI:SS'));
Insert into T3.DEMO_PRODUCT_INFO (PRODUCT_ID,PRODUCT_NAME,PRODUCT_DESCRIPTION,CATEGORY,PRODUCT_AVAIL,LIST_PRICE,MIMETYPE,FILENAME,IMAGE_LAST_UPDATE) values (10,'Wallet','Travel wallet suitable for men and women. Several compartments for credit cards, passports and cash','Accessories','Y',50,'image/jpeg','wallet.jpg',to_date('26-FEB-2020 09:20:21','DD-MON-YYYY HH24:MI:SS'));
Insert into T3.DEMO_PRODUCT_INFO (PRODUCT_ID,PRODUCT_NAME,PRODUCT_DESCRIPTION,CATEGORY,PRODUCT_AVAIL,LIST_PRICE,MIMETYPE,FILENAME,IMAGE_LAST_UPDATE) values (1,'Business Shirt','Wrinkle-free cotton business shirt','Mens','Y',50,'image/jpeg','shirt.jpg',to_date('26-FEB-2020 09:20:21','DD-MON-YYYY HH24:MI:SS'));
Insert into T3.DEMO_PRODUCT_INFO (PRODUCT_ID,PRODUCT_NAME,PRODUCT_DESCRIPTION,CATEGORY,PRODUCT_AVAIL,LIST_PRICE,MIMETYPE,FILENAME,IMAGE_LAST_UPDATE) values (2,'Trousers','Black trousers suitable for every business man','Mens','Y',80,'image/jpeg','pants.jpg',to_date('26-FEB-2020 09:20:21','DD-MON-YYYY HH24:MI:SS'));
Insert into T3.DEMO_PRODUCT_INFO (PRODUCT_ID,PRODUCT_NAME,PRODUCT_DESCRIPTION,CATEGORY,PRODUCT_AVAIL,LIST_PRICE,MIMETYPE,FILENAME,IMAGE_LAST_UPDATE) values (3,'Jacket','Fully lined jacket which is both professional and extremely comfortable to wear','Mens','Y',150,'image/jpeg','jacket.jpg',to_date('26-FEB-2020 09:20:21','DD-MON-YYYY HH24:MI:SS'));
Insert into T3.DEMO_PRODUCT_INFO (PRODUCT_ID,PRODUCT_NAME,PRODUCT_DESCRIPTION,CATEGORY,PRODUCT_AVAIL,LIST_PRICE,MIMETYPE,FILENAME,IMAGE_LAST_UPDATE) values (4,'Blouse','Silk blouse ideal for all business women','Womens','Y',60,'image/jpeg','blouse.jpg',to_date('26-FEB-2020 09:20:21','DD-MON-YYYY HH24:MI:SS'));
Insert into T3.DEMO_PRODUCT_INFO (PRODUCT_ID,PRODUCT_NAME,PRODUCT_DESCRIPTION,CATEGORY,PRODUCT_AVAIL,LIST_PRICE,MIMETYPE,FILENAME,IMAGE_LAST_UPDATE) values (5,'Skirt','Wrinkle free skirt','Womens','Y',80,'image/jpeg','skirt.jpg',to_date('26-FEB-2020 09:20:21','DD-MON-YYYY HH24:MI:SS'));
Insert into T3.DEMO_PRODUCT_INFO (PRODUCT_ID,PRODUCT_NAME,PRODUCT_DESCRIPTION,CATEGORY,PRODUCT_AVAIL,LIST_PRICE,MIMETYPE,FILENAME,IMAGE_LAST_UPDATE) values (6,'Ladies Shoes','Low heel and cushioned interior for comfort and style in simple yet elegant shoes','Womens','Y',120,'image/jpeg','heels.jpg',to_date('26-FEB-2020 09:20:21','DD-MON-YYYY HH24:MI:SS'));
Insert into T3.DEMO_PRODUCT_INFO (PRODUCT_ID,PRODUCT_NAME,PRODUCT_DESCRIPTION,CATEGORY,PRODUCT_AVAIL,LIST_PRICE,MIMETYPE,FILENAME,IMAGE_LAST_UPDATE) values (7,'Belt','Leather belt','Accessories','Y',30,'image/jpeg','belt.jpg',to_date('26-FEB-2020 09:20:21','DD-MON-YYYY HH24:MI:SS'));
Insert into T3.DEMO_PRODUCT_INFO (PRODUCT_ID,PRODUCT_NAME,PRODUCT_DESCRIPTION,CATEGORY,PRODUCT_AVAIL,LIST_PRICE,MIMETYPE,FILENAME,IMAGE_LAST_UPDATE) values (8,'Bag','Unisex bag suitable for carrying laptops with room for many additional items','Accessories','Y',125,'image/jpeg','bag.jpg',to_date('26-FEB-2020 09:20:21','DD-MON-YYYY HH24:MI:SS'));
REM INSERTING into T3.DEMO_STATES
SET DEFINE OFF;
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('AK','ALASKA');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('AL','ALABAMA');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('AR','ARKANSAS');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('AZ','ARIZONA');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('CA','CALIFORNIA');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('CO','COLORADO');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('CT','CONNECTICUT');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('DC','DISTRICT OF COLUMBIA');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('DE','DELAWARE');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('FL','FLORIDA');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('GA','GEORGIA');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('HI','HAWAII');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('IA','IOWA');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('ID','IDAHO');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('IL','ILLINOIS');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('IN','INDIANA');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('KS','KANSAS');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('KY','KENTUCKY');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('LA','LOUISIANA');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('MA','MASSACHUSETTS');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('MD','MARYLAND');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('ME','MAINE');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('MI','MICHIGAN');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('MN','MINNESOTA');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('MO','MISSOURI');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('MS','MISSISSIPPI');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('MT','MONTANA');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('NC','NORTH CAROLINA');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('ND','NORTH DAKOTA');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('NE','NEBRASKA');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('NH','NEW HAMPSHIRE');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('NJ','NEW JERSEY');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('NM','NEW MEXICO');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('NV','NEVADA');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('NY','NEW YORK');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('OH','OHIO');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('OK','OKLAHOMA');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('OR','OREGON');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('PA','PENNSYLVANIA');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('RI','RHODE ISLAND');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('SC','SOUTH CAROLINA');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('SD','SOUTH DAKOTA');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('TN','TENNESSEE');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('TX','TEXAS');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('UT','UTAH');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('VA','VIRGINIA');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('VT','VERMONT');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('WA','WASHINGTON');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('WI','WISCONSIN');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('WV','WEST VIRGINIA');
Insert into T3.DEMO_STATES (ST,STATE_NAME) values ('WY','WYOMING');
REM INSERTING into T3.DEMO_USERS
SET DEFINE OFF;
Insert into T3.DEMO_USERS (USER_ID,USER_NAME,PASSWORD,CREATED_ON,QUOTA,PRODUCTS,EXPIRES_ON,ADMIN_USER) values (1,'ADMIN','404A92942665580A5ECCCF27E989E68F',to_date('26-FEB-2020 09:20:21','DD-MON-YYYY HH24:MI:SS'),null,'Y',null,'Y');
Insert into T3.DEMO_USERS (USER_ID,USER_NAME,PASSWORD,CREATED_ON,QUOTA,PRODUCTS,EXPIRES_ON,ADMIN_USER) values (2,'DEMO','446F2860B3F57288A213D6C8F3CA5A83',to_date('26-FEB-2020 09:20:21','DD-MON-YYYY HH24:MI:SS'),15000,'Y',null,'N');
REM INSERTING into T3.DEPT
SET DEFINE OFF;
Insert into T3.DEPT (DEPTNO,DNAME,LOC) values (10,'ACCOUNTING','NEW YORK');
Insert into T3.DEPT (DEPTNO,DNAME,LOC) values (20,'RESEARCH','DALLAS');
Insert into T3.DEPT (DEPTNO,DNAME,LOC) values (30,'SALES','CHICAGO');
Insert into T3.DEPT (DEPTNO,DNAME,LOC) values (40,'OPERATIONS','BOSTON');
REM INSERTING into T3.EMP
SET DEFINE OFF;
Insert into T3.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7839,'KING','PRESIDENT',null,to_date('17-NOV-1981 00:00:00','DD-MON-YYYY HH24:MI:SS'),5000,null,10);
Insert into T3.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7698,'BLAKE','MANAGER',7839,to_date('01-MAY-1981 00:00:00','DD-MON-YYYY HH24:MI:SS'),2850,null,30);
Insert into T3.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7782,'CLARK','MANAGER',7839,to_date('09-JUN-1981 00:00:00','DD-MON-YYYY HH24:MI:SS'),2450,null,10);
Insert into T3.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7566,'JONES','MANAGER',7839,to_date('02-APR-1981 00:00:00','DD-MON-YYYY HH24:MI:SS'),2975,null,20);
Insert into T3.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7788,'SCOTT','ANALYST',7566,to_date('09-DEC-1982 00:00:00','DD-MON-YYYY HH24:MI:SS'),3000,null,20);
Insert into T3.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7902,'FORD','ANALYST',7566,to_date('03-DEC-1981 00:00:00','DD-MON-YYYY HH24:MI:SS'),3000,null,20);
Insert into T3.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7369,'SMITH','CLERK',7902,to_date('17-DEC-1980 00:00:00','DD-MON-YYYY HH24:MI:SS'),800,null,20);
Insert into T3.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7499,'ALLEN','SALESMAN',7698,to_date('20-FEB-1981 00:00:00','DD-MON-YYYY HH24:MI:SS'),1600,300,30);
Insert into T3.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7521,'WARD','SALESMAN',7698,to_date('22-FEB-1981 00:00:00','DD-MON-YYYY HH24:MI:SS'),1250,500,30);
Insert into T3.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7654,'MARTIN','SALESMAN',7698,to_date('28-SEP-1981 00:00:00','DD-MON-YYYY HH24:MI:SS'),1250,1400,30);
Insert into T3.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7844,'TURNER','SALESMAN',7698,to_date('08-SEP-1981 00:00:00','DD-MON-YYYY HH24:MI:SS'),1500,0,30);
Insert into T3.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7876,'ADAMS','CLERK',7788,to_date('12-JAN-1983 00:00:00','DD-MON-YYYY HH24:MI:SS'),1100,null,20);
Insert into T3.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7900,'JAMES','CLERK',7698,to_date('03-DEC-1981 00:00:00','DD-MON-YYYY HH24:MI:SS'),950,null,30);
Insert into T3.EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7934,'MILLER','CLERK',7782,to_date('23-JAN-1982 00:00:00','DD-MON-YYYY HH24:MI:SS'),1300,null,10);
REM INSERTING into T3.TBL_ACTIVITY
SET DEFINE OFF;
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (161,1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),10,'WELP',1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'29/FEB/20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (162,1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),10,'WELP',1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'29/FEB/20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (257,144,to_date('10-MAR-2020 16:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('10-MAR-2020 17:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('10-MAR-2020 18:08:51','DD-MON-YYYY HH24:MI:SS'),'10-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (258,144,to_date('10-MAR-2020 15:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('10-MAR-2020 16:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('10-MAR-2020 18:08:51','DD-MON-YYYY HH24:MI:SS'),'10-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (259,144,to_date('10-MAR-2020 14:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('10-MAR-2020 15:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('10-MAR-2020 18:08:51','DD-MON-YYYY HH24:MI:SS'),'10-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (281,144,to_date('11-MAR-2020 06:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('11-MAR-2020 07:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('11-MAR-2020 08:18:42','DD-MON-YYYY HH24:MI:SS'),'11-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (282,144,to_date('11-MAR-2020 05:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('11-MAR-2020 06:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('11-MAR-2020 08:18:42','DD-MON-YYYY HH24:MI:SS'),'11-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (283,144,to_date('11-MAR-2020 04:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('11-MAR-2020 05:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('11-MAR-2020 08:18:42','DD-MON-YYYY HH24:MI:SS'),'11-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (284,144,to_date('11-MAR-2020 03:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('11-MAR-2020 04:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('11-MAR-2020 08:18:42','DD-MON-YYYY HH24:MI:SS'),'11-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (285,144,to_date('11-MAR-2020 02:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('11-MAR-2020 03:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('11-MAR-2020 08:18:42','DD-MON-YYYY HH24:MI:SS'),'11-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (286,144,to_date('11-MAR-2020 01:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('11-MAR-2020 02:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('11-MAR-2020 08:18:42','DD-MON-YYYY HH24:MI:SS'),'11-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (287,144,to_date('11-MAR-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('11-MAR-2020 01:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('11-MAR-2020 08:18:43','DD-MON-YYYY HH24:MI:SS'),'11-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (288,144,to_date('10-MAR-2020 23:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('11-MAR-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('11-MAR-2020 08:18:43','DD-MON-YYYY HH24:MI:SS'),'11-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (289,144,to_date('10-MAR-2020 22:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('10-MAR-2020 23:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('11-MAR-2020 08:18:43','DD-MON-YYYY HH24:MI:SS'),'11-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (290,144,to_date('10-MAR-2020 21:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('10-MAR-2020 22:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('11-MAR-2020 08:18:43','DD-MON-YYYY HH24:MI:SS'),'11-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (291,144,to_date('10-MAR-2020 20:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('10-MAR-2020 21:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('11-MAR-2020 08:18:43','DD-MON-YYYY HH24:MI:SS'),'11-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (292,144,to_date('10-MAR-2020 19:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('10-MAR-2020 20:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('11-MAR-2020 08:18:43','DD-MON-YYYY HH24:MI:SS'),'11-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (1,2,to_date('16-MAR-2020 08:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('16-MAR-2020 09:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('16-MAR-2020 09:37:54','DD-MON-YYYY HH24:MI:SS'),'16-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (338,227,to_date('16-MAR-2020 10:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('16-MAR-2020 11:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('16-MAR-2020 11:00:32','DD-MON-YYYY HH24:MI:SS'),'16-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (339,227,to_date('16-MAR-2020 09:00:24','DD-MON-YYYY HH24:MI:SS'),to_date('16-MAR-2020 10:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('16-MAR-2020 11:00:32','DD-MON-YYYY HH24:MI:SS'),'16-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (332,223,to_date('16-MAR-2020 09:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('16-MAR-2020 10:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('16-MAR-2020 10:52:43','DD-MON-YYYY HH24:MI:SS'),'16-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (333,223,to_date('16-MAR-2020 08:48:24','DD-MON-YYYY HH24:MI:SS'),to_date('16-MAR-2020 09:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('16-MAR-2020 10:52:43','DD-MON-YYYY HH24:MI:SS'),'16-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (334,224,to_date('16-MAR-2020 09:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('16-MAR-2020 10:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('16-MAR-2020 10:53:35','DD-MON-YYYY HH24:MI:SS'),'16-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (335,224,to_date('16-MAR-2020 08:48:24','DD-MON-YYYY HH24:MI:SS'),to_date('16-MAR-2020 09:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('16-MAR-2020 10:53:35','DD-MON-YYYY HH24:MI:SS'),'16-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (336,225,to_date('16-MAR-2020 09:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('16-MAR-2020 10:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('16-MAR-2020 10:54:32','DD-MON-YYYY HH24:MI:SS'),'16-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (337,225,to_date('16-MAR-2020 08:48:24','DD-MON-YYYY HH24:MI:SS'),to_date('16-MAR-2020 09:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('16-MAR-2020 10:54:32','DD-MON-YYYY HH24:MI:SS'),'16-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (340,228,to_date('16-MAR-2020 10:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('16-MAR-2020 11:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('16-MAR-2020 11:11:16','DD-MON-YYYY HH24:MI:SS'),'16-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (341,228,to_date('16-MAR-2020 09:11:08','DD-MON-YYYY HH24:MI:SS'),to_date('16-MAR-2020 10:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('16-MAR-2020 11:11:16','DD-MON-YYYY HH24:MI:SS'),'16-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (346,231,to_date('16-MAR-2020 10:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('16-MAR-2020 11:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('16-MAR-2020 11:20:15','DD-MON-YYYY HH24:MI:SS'),'16-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (347,231,to_date('16-MAR-2020 09:19:00','DD-MON-YYYY HH24:MI:SS'),to_date('16-MAR-2020 10:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('16-MAR-2020 11:20:15','DD-MON-YYYY HH24:MI:SS'),'16-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (301,201,to_date('12-MAR-2020 08:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('12-MAR-2020 09:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('12-MAR-2020 09:41:46','DD-MON-YYYY HH24:MI:SS'),'12-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (302,201,to_date('12-MAR-2020 12:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('12-MAR-2020 13:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('12-MAR-2020 13:34:17','DD-MON-YYYY HH24:MI:SS'),'12-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (303,201,to_date('12-MAR-2020 11:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('12-MAR-2020 12:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('12-MAR-2020 13:34:17','DD-MON-YYYY HH24:MI:SS'),'12-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (304,201,to_date('12-MAR-2020 10:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('12-MAR-2020 11:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('12-MAR-2020 13:34:17','DD-MON-YYYY HH24:MI:SS'),'12-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (305,201,to_date('12-MAR-2020 09:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('12-MAR-2020 10:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('12-MAR-2020 13:34:17','DD-MON-YYYY HH24:MI:SS'),'12-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (262,144,to_date('10-MAR-2020 18:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('10-MAR-2020 19:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('10-MAR-2020 20:08:05','DD-MON-YYYY HH24:MI:SS'),'10-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (263,144,to_date('10-MAR-2020 17:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('10-MAR-2020 18:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('10-MAR-2020 20:08:05','DD-MON-YYYY HH24:MI:SS'),'10-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (306,201,to_date('12-MAR-2020 12:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('12-MAR-2020 13:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('12-MAR-2020 13:34:34','DD-MON-YYYY HH24:MI:SS'),'12-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (307,201,to_date('12-MAR-2020 11:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('12-MAR-2020 12:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('12-MAR-2020 13:34:34','DD-MON-YYYY HH24:MI:SS'),'12-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (308,201,to_date('12-MAR-2020 10:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('12-MAR-2020 11:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('12-MAR-2020 13:34:34','DD-MON-YYYY HH24:MI:SS'),'12-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (309,201,to_date('12-MAR-2020 09:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('12-MAR-2020 10:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('12-MAR-2020 13:34:34','DD-MON-YYYY HH24:MI:SS'),'12-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (330,222,to_date('16-MAR-2020 09:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('16-MAR-2020 10:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('16-MAR-2020 10:51:02','DD-MON-YYYY HH24:MI:SS'),'16-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (331,222,to_date('16-MAR-2020 08:48:24','DD-MON-YYYY HH24:MI:SS'),to_date('16-MAR-2020 09:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('16-MAR-2020 10:51:02','DD-MON-YYYY HH24:MI:SS'),'16-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (361,232,to_date('08-JUN-2020 09:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('08-JUN-2020 10:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('08-JUN-2020 10:38:28','DD-MON-YYYY HH24:MI:SS'),'08-JUN-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (362,232,to_date('08-JUN-2020 08:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('08-JUN-2020 09:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('08-JUN-2020 10:38:28','DD-MON-YYYY HH24:MI:SS'),'08-JUN-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (181,1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),10,'WELP',1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'29/FEB/20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (182,1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),10,'WELP',1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'29/FEB/20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (183,1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),10,'WELP',1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'29/FEB/20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (184,1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),10,'WELP',1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'29/FEB/20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (185,1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),10,'WELP',1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'29/FEB/20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (186,1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),10,'WELP',1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'29/FEB/20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (293,144,to_date('11-MAR-2020 12:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('11-MAR-2020 13:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('11-MAR-2020 14:43:09','DD-MON-YYYY HH24:MI:SS'),'11-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (294,144,to_date('11-MAR-2020 11:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('11-MAR-2020 12:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('11-MAR-2020 14:43:09','DD-MON-YYYY HH24:MI:SS'),'11-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (295,144,to_date('11-MAR-2020 10:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('11-MAR-2020 11:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('11-MAR-2020 14:43:09','DD-MON-YYYY HH24:MI:SS'),'11-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (296,144,to_date('11-MAR-2020 09:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('11-MAR-2020 10:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('11-MAR-2020 14:43:09','DD-MON-YYYY HH24:MI:SS'),'11-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (297,144,to_date('11-MAR-2020 08:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('11-MAR-2020 09:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('11-MAR-2020 14:43:09','DD-MON-YYYY HH24:MI:SS'),'11-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (298,144,to_date('11-MAR-2020 07:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('11-MAR-2020 08:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('11-MAR-2020 14:43:09','DD-MON-YYYY HH24:MI:SS'),'11-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (299,144,to_date('11-MAR-2020 13:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('11-MAR-2020 14:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('11-MAR-2020 15:18:41','DD-MON-YYYY HH24:MI:SS'),'11-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (363,232,to_date('08-JUN-2020 10:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('08-JUN-2020 11:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('08-JUN-2020 11:23:59','DD-MON-YYYY HH24:MI:SS'),'08-JUN-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (105,143,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),10,'WELP',1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'29/FEB/20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (106,143,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),10,'WELP',1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'29/FEB/20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (107,144,to_date('10-MAR-2020 13:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('10-MAR-2020 14:00:00','DD-MON-YYYY HH24:MI:SS'),10,'WELPPPPPPP',1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'11-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (108,143,to_date('04-MAR-2020 09:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('04-MAR-2020 10:00:00','DD-MON-YYYY HH24:MI:SS'),10,'WELP',1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'29/FEB/20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (344,230,to_date('16-MAR-2020 10:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('16-MAR-2020 11:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('16-MAR-2020 11:14:52','DD-MON-YYYY HH24:MI:SS'),'16-MAR-20');
Insert into T3.TBL_ACTIVITY (ID,HEADER_ID,START_TIME,END_TIME,DOWNTIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED) values (345,230,to_date('16-MAR-2020 09:13:38','DD-MON-YYYY HH24:MI:SS'),to_date('16-MAR-2020 10:00:00','DD-MON-YYYY HH24:MI:SS'),0,null,1,to_date('16-MAR-2020 11:14:52','DD-MON-YYYY HH24:MI:SS'),'16-MAR-20');
REM INSERTING into T3.TBL_ACTIVITY_DETAILS
SET DEFINE OFF;
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (41,281,'1231313',50,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (81,1,'12313',5000,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (82,321,'500',5000,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (83,322,'12313',10000,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (84,323,'12313',123130,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (85,325,'500',5000,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (86,326,'1000',1000,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (87,328,'500',1000,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (25,259,'111111',48,2);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (89,333,'asdfasf',12312310,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (90,335,'asdfasf',12312310,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (91,337,'asdfasf',12312310,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (92,346,'1000',1000,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (93,347,'5000',5000,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (94,348,'1000',1000,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (95,349,'5000',5000,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (22,263,'1',2,48);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (29,257,'2222',200,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (30,257,'11111',100,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (42,281,'1231313',0,100);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (61,306,'100',200,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (88,331,'asdfasf',12312310,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (101,361,'23414124',1000,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (26,259,'111111',500,500);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (27,258,'6555565656',100,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (28,259,'111111',500,500);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (102,361,'1321313',2000,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (1,107,'14110119',37,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (2,107,'14110119',79,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (3,107,'14110119',51,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (4,107,'14110119',178,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (5,107,'14110119',42,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (6,107,'14110119',29,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (7,107,'14110119',60,0);
Insert into T3.TBL_ACTIVITY_DETAILS (ID,ACTIVITY_ID,LOT_NUMBER,PACKED_QTY,ADJ_QTY) values (8,107,'14110119',2074,50);
REM INSERTING into T3.TBL_ACTIVITY_DOWNTIME
SET DEFINE OFF;
Insert into T3.TBL_ACTIVITY_DOWNTIME (ID,DOWNTIME_TYPE_ID,MINUTES,REMARKS,QUANTITY,ACTIVITY_ID,CREATED_BY,CREATED_AT) values (21,1,10,'waaaahhhhhhhh',10,361,1,to_date('08-JUN-2020 10:38:28','DD-MON-YYYY HH24:MI:SS'));
Insert into T3.TBL_ACTIVITY_DOWNTIME (ID,DOWNTIME_TYPE_ID,MINUTES,REMARKS,QUANTITY,ACTIVITY_ID,CREATED_BY,CREATED_AT) values (23,1,10,'bla',1,361,1,to_date('08-JUN-2020 11:24:30','DD-MON-YYYY HH24:MI:SS'));
Insert into T3.TBL_ACTIVITY_DOWNTIME (ID,DOWNTIME_TYPE_ID,MINUTES,REMARKS,QUANTITY,ACTIVITY_ID,CREATED_BY,CREATED_AT) values (24,1,10,null,10,362,1,to_date('08-JUN-2020 11:25:25','DD-MON-YYYY HH24:MI:SS'));
Insert into T3.TBL_ACTIVITY_DOWNTIME (ID,DOWNTIME_TYPE_ID,MINUTES,REMARKS,QUANTITY,ACTIVITY_ID,CREATED_BY,CREATED_AT) values (2,2,10,'LALALALELELE',10,351,1,null);
Insert into T3.TBL_ACTIVITY_DOWNTIME (ID,DOWNTIME_TYPE_ID,MINUTES,REMARKS,QUANTITY,ACTIVITY_ID,CREATED_BY,CREATED_AT) values (3,1,10,'BLEEEE',20,351,1,to_date('16-MAR-2020 15:36:03','DD-MON-YYYY HH24:MI:SS'));
Insert into T3.TBL_ACTIVITY_DOWNTIME (ID,DOWNTIME_TYPE_ID,MINUTES,REMARKS,QUANTITY,ACTIVITY_ID,CREATED_BY,CREATED_AT) values (4,1,10,'LALALA',50,349,1,to_date('16-MAR-2020 15:48:29','DD-MON-YYYY HH24:MI:SS'));
Insert into T3.TBL_ACTIVITY_DOWNTIME (ID,DOWNTIME_TYPE_ID,MINUTES,REMARKS,QUANTITY,ACTIVITY_ID,CREATED_BY,CREATED_AT) values (5,2,15,'WOOOF',20,349,1,to_date('16-MAR-2020 15:54:38','DD-MON-YYYY HH24:MI:SS'));
Insert into T3.TBL_ACTIVITY_DOWNTIME (ID,DOWNTIME_TYPE_ID,MINUTES,REMARKS,QUANTITY,ACTIVITY_ID,CREATED_BY,CREATED_AT) values (22,1,10,'101010',100,363,1,to_date('08-JUN-2020 11:23:59','DD-MON-YYYY HH24:MI:SS'));
REM INSERTING into T3.TBL_DOWNTIME_TYPES
SET DEFINE OFF;
Insert into T3.TBL_DOWNTIME_TYPES (ID,NAME,DEFAULT_MINUTES,QUANTITY) values (1,'downtime 1',10,null);
Insert into T3.TBL_DOWNTIME_TYPES (ID,NAME,DEFAULT_MINUTES,QUANTITY) values (2,'downtime 2',15,null);
Insert into T3.TBL_DOWNTIME_TYPES (ID,NAME,DEFAULT_MINUTES,QUANTITY) values (3,'downtime 3',20,null);
REM INSERTING into T3.TBL_HEADER
SET DEFINE OFF;
Insert into T3.TBL_HEADER (ID,BARCODE,ACTUAL_START,ACTUAL_END,STATUS,PO_NUMBER,CONTROL_NUMBER,SHIPPING_DATE,ORDER_QUANTITY,CUSTOMER,CUSTOMER_CODE,CUSTOMER_SPEC,OLD_CODE,INTERNAL_CODE,PRODUCT_DESCRIPTION,SHIFT,SCHEDULE_DATE_START,SCHEDULE_DATE_END) values (181,'testjkhj;12345',to_date('12-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('12-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'test','12345ll','54321ll',to_date('12-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),11,'renz','martin','cerico','hehez','123ll45','54321ll',null,null,null);
Insert into T3.TBL_HEADER (ID,BARCODE,ACTUAL_START,ACTUAL_END,STATUS,PO_NUMBER,CONTROL_NUMBER,SHIPPING_DATE,ORDER_QUANTITY,CUSTOMER,CUSTOMER_CODE,CUSTOMER_SPEC,OLD_CODE,INTERNAL_CODE,PRODUCT_DESCRIPTION,SHIFT,SCHEDULE_DATE_START,SCHEDULE_DATE_END) values (232,'163178',to_date('08-JUN-2020 07:00:00','DD-MON-YYYY HH24:MI:SS'),null,'WIP','BDP-4728S','163178',to_date('09-JUN-2020 08:28:43','DD-MON-YYYY HH24:MI:SS'),10000,'BDP','DW44602','7"x1/16"x7/8" A60T 2G','275APDEP','20075APDEP1XX','C.S 180*1.6*22 AA46T 2G(Metal Insert With Date) DEWA [275APDEP]','dayshift',null,null);
Insert into T3.TBL_HEADER (ID,BARCODE,ACTUAL_START,ACTUAL_END,STATUS,PO_NUMBER,CONTROL_NUMBER,SHIPPING_DATE,ORDER_QUANTITY,CUSTOMER,CUSTOMER_CODE,CUSTOMER_SPEC,OLD_CODE,INTERNAL_CODE,PRODUCT_DESCRIPTION,SHIFT,SCHEDULE_DATE_START,SCHEDULE_DATE_END) values (201,'SO35-091319-785915',to_date('12-MAR-2020 08:00:00','DD-MON-YYYY HH24:MI:SS'),null,'WIP','SCN-4735S','PG-11302019-801934',to_date('12-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),5000,'SCN','2608600936','355x3x25.4mm A30R1G','344ANBOS','30144ANBOS0XX','CUT355*3*25.4 A30R 1G(Metail Insert With BOSCH AB2)','nightshift',to_date('11-MAR-2020 08:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('11-MAR-2020 10:00:00','DD-MON-YYYY HH24:MI:SS'));
Insert into T3.TBL_HEADER (ID,BARCODE,ACTUAL_START,ACTUAL_END,STATUS,PO_NUMBER,CONTROL_NUMBER,SHIPPING_DATE,ORDER_QUANTITY,CUSTOMER,CUSTOMER_CODE,CUSTOMER_SPEC,OLD_CODE,INTERNAL_CODE,PRODUCT_DESCRIPTION,SHIFT,SCHEDULE_DATE_START,SCHEDULE_DATE_END) values (143,'SO01-022020-818454',to_date('04-MAR-2020 08:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('04-MAR-2020 09:00:00','DD-MON-YYYY HH24:MI:SS'),'test','12345ll','54321ll',to_date('12-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),11,'renz','martin','cerico','hehez','123ll45','54321ll','dayshift',null,null);
Insert into T3.TBL_HEADER (ID,BARCODE,ACTUAL_START,ACTUAL_END,STATUS,PO_NUMBER,CONTROL_NUMBER,SHIPPING_DATE,ORDER_QUANTITY,CUSTOMER,CUSTOMER_CODE,CUSTOMER_SPEC,OLD_CODE,INTERNAL_CODE,PRODUCT_DESCRIPTION,SHIFT,SCHEDULE_DATE_START,SCHEDULE_DATE_END) values (144,'SO35-091319-785916',to_date('10-MAR-2020 13:00:00','DD-MON-YYYY HH24:MI:SS'),null,'WIP','SCN-4735S','PG-11302019-801934',to_date('12-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),5000,'SCN','2608600936','355x3x25.4mm A30R1G','344ANBOS','30144ANBOS0XX','CUT355*3*25.4 A30R 1G(Metail Insert With BOSCH AB2)','dayshift',to_date('11-MAR-2020 08:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('11-MAR-2020 10:00:00','DD-MON-YYYY HH24:MI:SS'));
REM INSERTING into T3.TBL_MANPOWER
SET DEFINE OFF;
Insert into T3.TBL_MANPOWER (ID,POSITION_ID,MANPOWER_ID,START_TIME,END_TIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED,HEADER_ID) values (121,1,1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'REMARKS',1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),181);
Insert into T3.TBL_MANPOWER (ID,POSITION_ID,MANPOWER_ID,START_TIME,END_TIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED,HEADER_ID) values (122,1,1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'REMARKS',1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),181);
Insert into T3.TBL_MANPOWER (ID,POSITION_ID,MANPOWER_ID,START_TIME,END_TIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED,HEADER_ID) values (65,1,1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'REMARKS',1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),143);
Insert into T3.TBL_MANPOWER (ID,POSITION_ID,MANPOWER_ID,START_TIME,END_TIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED,HEADER_ID) values (66,1,1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'REMARKS',1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),143);
Insert into T3.TBL_MANPOWER (ID,POSITION_ID,MANPOWER_ID,START_TIME,END_TIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED,HEADER_ID) values (67,1,1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'REMARKS',1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),144);
Insert into T3.TBL_MANPOWER (ID,POSITION_ID,MANPOWER_ID,START_TIME,END_TIME,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED,HEADER_ID) values (68,1,1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'REMARKS',1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),144);
REM INSERTING into T3.TBL_MATERIAL
SET DEFINE OFF;
Insert into T3.TBL_MATERIAL (ID,QUANTITY,STANDARD,REQUIREMENTS,USED,REJECT,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED,MATERIAL_CODE,HEADER_ID,ITEM_CATEGORY,BOX_TYPE,MAX_QTY,MATERIAL_DESC) values (121,500,1,500,500,0,'remarks',1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'1231313',181,null,null,null,null);
Insert into T3.TBL_MATERIAL (ID,QUANTITY,STANDARD,REQUIREMENTS,USED,REJECT,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED,MATERIAL_CODE,HEADER_ID,ITEM_CATEGORY,BOX_TYPE,MAX_QTY,MATERIAL_DESC) values (122,500,1,500,500,0,'remarks',1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'1231313',181,null,null,null,null);
Insert into T3.TBL_MATERIAL (ID,QUANTITY,STANDARD,REQUIREMENTS,USED,REJECT,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED,MATERIAL_CODE,HEADER_ID,ITEM_CATEGORY,BOX_TYPE,MAX_QTY,MATERIAL_DESC) values (161,20,20,500,0,3,'bla',0,to_date('16-MAR-2020 11:21:27','DD-MON-YYYY HH24:MI:SS'),to_date('16-MAR-2020 11:49:48','DD-MON-YYYY HH24:MI:SS'),'ZTDBSAFEB&D',232,'ADAPTER',null,100,'B&D OFF,CUTTING,FLAP ? ??');
Insert into T3.TBL_MATERIAL (ID,QUANTITY,STANDARD,REQUIREMENTS,USED,REJECT,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED,MATERIAL_CODE,HEADER_ID,ITEM_CATEGORY,BOX_TYPE,MAX_QTY,MATERIAL_DESC) values (162,100,100,100,0,5,'ble',0,to_date('16-MAR-2020 11:21:27','DD-MON-YYYY HH24:MI:SS'),to_date('16-MAR-2020 11:49:48','DD-MON-YYYY HH24:MI:SS'),'TLBOXLADEW',232,'ADAPTER',null,100,'DEWALT (Box Label large) [TLBOXLADEW] DEWALT ????  ?');
Insert into T3.TBL_MATERIAL (ID,QUANTITY,STANDARD,REQUIREMENTS,USED,REJECT,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED,MATERIAL_CODE,HEADER_ID,ITEM_CATEGORY,BOX_TYPE,MAX_QTY,MATERIAL_DESC) values (163,20,20,500,0,100,null,0,to_date('16-MAR-2020 11:21:27','DD-MON-YYYY HH24:MI:SS'),to_date('16-MAR-2020 13:02:48','DD-MON-YYYY HH24:MI:SS'),'VC716AGBDP',232,'BOX','A',200,'C180x1.6 (?) A 20PC DW44602 ?? PH [VC716AGBDP]');
Insert into T3.TBL_MATERIAL (ID,QUANTITY,STANDARD,REQUIREMENTS,USED,REJECT,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED,MATERIAL_CODE,HEADER_ID,ITEM_CATEGORY,BOX_TYPE,MAX_QTY,MATERIAL_DESC) values (164,200,200,50,0,0,null,0,to_date('16-MAR-2020 11:21:27','DD-MON-YYYY HH24:MI:SS'),to_date('16-MAR-2020 11:21:27','DD-MON-YYYY HH24:MI:SS'),'VC716CNBBB',232,'BOX','C',200,'C 180 x 1.6 C 200PCS 40.6 x 20.6 x 29.4 [VC716CNBBB] | C 180 x 1.6(?) C 200PCS');
Insert into T3.TBL_MATERIAL (ID,QUANTITY,STANDARD,REQUIREMENTS,USED,REJECT,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED,MATERIAL_CODE,HEADER_ID,ITEM_CATEGORY,BOX_TYPE,MAX_QTY,MATERIAL_DESC) values (165,100,100,100,0,0,null,0,to_date('16-MAR-2020 11:21:27','DD-MON-YYYY HH24:MI:SS'),to_date('16-MAR-2020 11:21:27','DD-MON-YYYY HH24:MI:SS'),'VC716BMBDP',232,'BOX','B',200,'C180x1.6(?) B 100PC (20??) DW44602 ?? PH [VC716BMBDP]');
Insert into T3.TBL_MATERIAL (ID,QUANTITY,STANDARD,REQUIREMENTS,USED,REJECT,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED,MATERIAL_CODE,HEADER_ID,ITEM_CATEGORY,BOX_TYPE,MAX_QTY,MATERIAL_DESC) values (166,1,1,10000,0,0,null,0,to_date('16-MAR-2020 11:21:27','DD-MON-YYYY HH24:MI:SS'),to_date('16-MAR-2020 11:21:27','DD-MON-YYYY HH24:MI:SS'),'20075APDEP1XF',232,'CUT SKILL',null,1,'C.S 180*1.6*22 AA46T 2G(????) DEWA [275APDEP]');
Insert into T3.TBL_MATERIAL (ID,QUANTITY,STANDARD,REQUIREMENTS,USED,REJECT,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED,MATERIAL_CODE,HEADER_ID,ITEM_CATEGORY,BOX_TYPE,MAX_QTY,MATERIAL_DESC) values (167,1,1,10000,0,0,null,0,to_date('16-MAR-2020 11:21:27','DD-MON-YYYY HH24:MI:SS'),to_date('16-MAR-2020 11:21:27','DD-MON-YYYY HH24:MI:SS'),'UC44602DEP',232,'LABELS',null,1,'FLAT 180mm x 1.6mm x 22.23mm A60T-BF DW44602 (OSA) N179555 PH DEWALT (9) LA4');
Insert into T3.TBL_MATERIAL (ID,QUANTITY,STANDARD,REQUIREMENTS,USED,REJECT,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED,MATERIAL_CODE,HEADER_ID,ITEM_CATEGORY,BOX_TYPE,MAX_QTY,MATERIAL_DESC) values (141,1,50,100,204,0,'remarks',null,to_date('09-MAR-2020 09:00:37','DD-MON-YYYY HH24:MI:SS'),to_date('09-MAR-2020 09:00:42','DD-MON-YYYY HH24:MI:SS'),'TBB143ASCN',144,null,null,null,null);
Insert into T3.TBL_MATERIAL (ID,QUANTITY,STANDARD,REQUIREMENTS,USED,REJECT,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED,MATERIAL_CODE,HEADER_ID,ITEM_CATEGORY,BOX_TYPE,MAX_QTY,MATERIAL_DESC) values (142,1,50,100,204,0,'remarks',null,to_date('09-MAR-2020 09:01:39','DD-MON-YYYY HH24:MI:SS'),to_date('09-MAR-2020 09:01:42','DD-MON-YYYY HH24:MI:SS'),'TBXLC28BOS',144,null,null,null,null);
Insert into T3.TBL_MATERIAL (ID,QUANTITY,STANDARD,REQUIREMENTS,USED,REJECT,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED,MATERIAL_CODE,HEADER_ID,ITEM_CATEGORY,BOX_TYPE,MAX_QTY,MATERIAL_DESC) values (143,1,1,5000,2550,0,'remarks',null,to_date('09-MAR-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('09-MAR-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'TL124BKBOS',144,null,null,null,null);
Insert into T3.TBL_MATERIAL (ID,QUANTITY,STANDARD,REQUIREMENTS,USED,REJECT,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED,MATERIAL_CODE,HEADER_ID,ITEM_CATEGORY,BOX_TYPE,MAX_QTY,MATERIAL_DESC) values (144,1,1,5000,2550,8,'remarks',null,to_date('09-MAR-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('09-MAR-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'UC936A1BOS',144,null,null,null,null);
Insert into T3.TBL_MATERIAL (ID,QUANTITY,STANDARD,REQUIREMENTS,USED,REJECT,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED,MATERIAL_CODE,HEADER_ID,ITEM_CATEGORY,BOX_TYPE,MAX_QTY,MATERIAL_DESC) values (145,1,25,200,102,0,'remarks',null,to_date('09-MAR-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('09-MAR-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'VC142AHHBP',144,null,null,null,null);
Insert into T3.TBL_MATERIAL (ID,QUANTITY,STANDARD,REQUIREMENTS,USED,REJECT,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED,MATERIAL_CODE,HEADER_ID,ITEM_CATEGORY,BOX_TYPE,MAX_QTY,MATERIAL_DESC) values (146,1,50,100,204,0,'remarks',null,to_date('09-MAR-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('09-MAR-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'VC142CKBOS',144,null,null,null,null);
Insert into T3.TBL_MATERIAL (ID,QUANTITY,STANDARD,REQUIREMENTS,USED,REJECT,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED,MATERIAL_CODE,HEADER_ID,ITEM_CATEGORY,BOX_TYPE,MAX_QTY,MATERIAL_DESC) values (65,500,1,500,500,0,'remarks',1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'1231313',143,null,null,null,null);
Insert into T3.TBL_MATERIAL (ID,QUANTITY,STANDARD,REQUIREMENTS,USED,REJECT,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED,MATERIAL_CODE,HEADER_ID,ITEM_CATEGORY,BOX_TYPE,MAX_QTY,MATERIAL_DESC) values (66,500,1,500,500,0,'remarks',1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'1231313',143,null,null,null,null);
Insert into T3.TBL_MATERIAL (ID,QUANTITY,STANDARD,REQUIREMENTS,USED,REJECT,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED,MATERIAL_CODE,HEADER_ID,ITEM_CATEGORY,BOX_TYPE,MAX_QTY,MATERIAL_DESC) values (67,1,1,5000,2550,0,'remarks',1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'30144AN----XF',144,null,null,null,null);
Insert into T3.TBL_MATERIAL (ID,QUANTITY,STANDARD,REQUIREMENTS,USED,REJECT,REMARKS,LAST_UPDATED_BY,DATE_ENTERED,DATE_UPDATED,MATERIAL_CODE,HEADER_ID,ITEM_CATEGORY,BOX_TYPE,MAX_QTY,MATERIAL_DESC) values (68,25,25,200,102,0,'remarks',1,to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),to_date('29-FEB-2020 00:00:00','DD-MON-YYYY HH24:MI:SS'),'TBA143ASCN',144,null,null,null,null);
--------------------------------------------------------
--  DDL for Index APEX$_WS_NOTES_IDX2
--------------------------------------------------------

  CREATE INDEX "T3"."APEX$_WS_NOTES_IDX2" ON "T3"."APEX$_WS_NOTES" ("WS_APP_ID", "WEBPAGE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_FILES_IDX1
--------------------------------------------------------

  CREATE INDEX "T3"."APEX$_WS_FILES_IDX1" ON "T3"."APEX$_WS_FILES" ("WS_APP_ID", "DATA_GRID_ID", "ROW_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TBL_MATERIAL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "T3"."TBL_MATERIAL_PK" ON "T3"."TBL_MATERIAL" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TBL_MANPOWER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "T3"."TBL_MANPOWER_PK" ON "T3"."TBL_MANPOWER" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DOWNTIME_TYPES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "T3"."DOWNTIME_TYPES_PK" ON "T3"."TBL_DOWNTIME_TYPES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_TAGS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "T3"."APEX$_WS_TAGS_PK" ON "T3"."APEX$_WS_TAGS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_FILES_IDX2
--------------------------------------------------------

  CREATE INDEX "T3"."APEX$_WS_FILES_IDX2" ON "T3"."APEX$_WS_FILES" ("WS_APP_ID", "WEBPAGE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_ACL_IDX1
--------------------------------------------------------

  CREATE INDEX "T3"."APEX$_ACL_IDX1" ON "T3"."APEX$_ACL" ("WS_APP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TBL_HEADER_BARCODE_INDEX
--------------------------------------------------------

  CREATE INDEX "T3"."TBL_HEADER_BARCODE_INDEX" ON "T3"."TBL_HEADER" ("BARCODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_WEBPG_SECTIONS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "T3"."APEX$_WS_WEBPG_SECTIONS_PK" ON "T3"."APEX$_WS_WEBPG_SECTIONS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_NOTES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "T3"."APEX$_WS_NOTES_PK" ON "T3"."APEX$_WS_NOTES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TBL_ACTIVITY_DETAILS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "T3"."TBL_ACTIVITY_DETAILS_PK" ON "T3"."TBL_ACTIVITY_DETAILS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DEMO_USERS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "T3"."DEMO_USERS_PK" ON "T3"."DEMO_USERS" ("USER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TBL_ACTIVITY_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "T3"."TBL_ACTIVITY_PK" ON "T3"."TBL_ACTIVITY" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_TAGS_IDX1
--------------------------------------------------------

  CREATE INDEX "T3"."APEX$_WS_TAGS_IDX1" ON "T3"."APEX$_WS_TAGS" ("WS_APP_ID", "DATA_GRID_ID", "ROW_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TBL_HEADER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "T3"."TBL_HEADER_PK" ON "T3"."TBL_HEADER" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_WEBPG_SECHIST_IDX1
--------------------------------------------------------

  CREATE INDEX "T3"."APEX$_WS_WEBPG_SECHIST_IDX1" ON "T3"."APEX$_WS_WEBPG_SECTION_HISTORY" ("WS_APP_ID", "WEBPAGE_ID", "SECTION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_TAGS_IDX2
--------------------------------------------------------

  CREATE INDEX "T3"."APEX$_WS_TAGS_IDX2" ON "T3"."APEX$_WS_TAGS" ("WS_APP_ID", "WEBPAGE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DEMO_ORDER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "T3"."DEMO_ORDER_PK" ON "T3"."DEMO_ORDERS" ("ORDER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_ACL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "T3"."APEX$_ACL_PK" ON "T3"."APEX$_ACL" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DEMO_CUST_NAME_IX
--------------------------------------------------------

  CREATE INDEX "T3"."DEMO_CUST_NAME_IX" ON "T3"."DEMO_CUSTOMERS" ("CUST_LAST_NAME", "CUST_FIRST_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DEMO_ORDER_ITEMS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "T3"."DEMO_ORDER_ITEMS_PK" ON "T3"."DEMO_ORDER_ITEMS" ("ORDER_ITEM_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DEMO_PRODUCT_INFO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "T3"."DEMO_PRODUCT_INFO_PK" ON "T3"."DEMO_PRODUCT_INFO" ("PRODUCT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TBL_ACTIVITY_DOWNTIME_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "T3"."TBL_ACTIVITY_DOWNTIME_PK" ON "T3"."TBL_ACTIVITY_DOWNTIME" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_ROWS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "T3"."APEX$_WS_ROWS_PK" ON "T3"."APEX$_WS_ROWS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_LINKS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "T3"."APEX$_WS_LINKS_PK" ON "T3"."APEX$_WS_LINKS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_NOTES_IDX1
--------------------------------------------------------

  CREATE INDEX "T3"."APEX$_WS_NOTES_IDX1" ON "T3"."APEX$_WS_NOTES" ("WS_APP_ID", "DATA_GRID_ID", "ROW_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DEMO_ORD_CUSTOMER_IX
--------------------------------------------------------

  CREATE INDEX "T3"."DEMO_ORD_CUSTOMER_IX" ON "T3"."DEMO_ORDERS" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_FILES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "T3"."APEX$_WS_FILES_PK" ON "T3"."APEX$_WS_FILES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_LINKS_IDX1
--------------------------------------------------------

  CREATE INDEX "T3"."APEX$_WS_LINKS_IDX1" ON "T3"."APEX$_WS_LINKS" ("WS_APP_ID", "DATA_GRID_ID", "ROW_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_HISTORY_IDX
--------------------------------------------------------

  CREATE INDEX "T3"."APEX$_WS_HISTORY_IDX" ON "T3"."APEX$_WS_HISTORY" ("WS_APP_ID", "DATA_GRID_ID", "ROW_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DEMO_CUSTOMERS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "T3"."DEMO_CUSTOMERS_PK" ON "T3"."DEMO_CUSTOMERS" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_LINKS_IDX2
--------------------------------------------------------

  CREATE INDEX "T3"."APEX$_WS_LINKS_IDX2" ON "T3"."APEX$_WS_LINKS" ("WS_APP_ID", "WEBPAGE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_ROWS_IDX
--------------------------------------------------------

  CREATE INDEX "T3"."APEX$_WS_ROWS_IDX" ON "T3"."APEX$_WS_ROWS" ("WS_APP_ID", "DATA_GRID_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Trigger APEX$_ACL_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "T3"."APEX$_ACL_T1" 
before insert or update on "APEX$_ACL"
for each row
begin
    --
    -- maintain pk and timestamps
    --
    :new.username := upper(:new.username);
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    end if;
end;
/
ALTER TRIGGER "T3"."APEX$_ACL_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APEX$_WS_FILES_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "T3"."APEX$_WS_FILES_T1" 
before insert or update on "APEX$_WS_FILES"
for each row
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting and :new.image_alias is null then
        :new.image_alias := :new.name;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        :new.content_last_update := sysdate;
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        if nvl(length(:new.content),0) <> nvl(length(:old.content),0) then
            :new.content_last_update := sysdate;
        end if;
    end if;
end;
/
ALTER TRIGGER "T3"."APEX$_WS_FILES_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APEX$_WS_LINKS_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "T3"."APEX$_WS_LINKS_T1" 
before insert or update on "APEX$_WS_LINKS"
for each row
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    end if;
end;
/
ALTER TRIGGER "T3"."APEX$_WS_LINKS_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APEX$_WS_NOTES_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "T3"."APEX$_WS_NOTES_T1" 
before insert or update on "APEX$_WS_NOTES"
for each row
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    end if;
end;
/
ALTER TRIGGER "T3"."APEX$_WS_NOTES_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APEX$_WS_ROWS_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "T3"."APEX$_WS_ROWS_T1" 
before insert or update on "APEX$_WS_ROWS"
for each row
declare
    l_tag_list apex_application_global.vc_arr2;
    type col_arr is table of varchar2(32767) index by varchar2(255);
    la_col_label col_arr;
    procedure datagrid_logging( 
        p_row_id       in number,
        p_ws_app_id    in number,
        p_data_grid_id in number,
        p_col_name     in varchar2,
        p_type         in varchar2,
        p_old_c        in varchar2 default null,
        p_new_c        in varchar2 default null,
        p_old_d        in date default null,
        p_new_d        in date default null,
        p_old_n        in number default null,
        p_new_n        in number default null)
    is
    begin
        case p_type
        when 'C' then
          if (p_old_c is null and p_new_c is not null) or (p_old_c is not null and p_new_c is null) or (p_old_c != p_new_c) then
              insert into apex$_ws_history (row_id, ws_app_id, data_grid_id, column_name, old_value, new_value, change_date, application_user_id)
              values (p_row_id, p_ws_app_id, p_data_grid_id, p_col_name, p_old_c, p_new_c, sysdate, v('APP_USER'));
          end if;
        when 'D' then
          if (p_old_d is null and p_new_d is not null) or (p_old_d is not null and p_new_d is null) or (p_old_d != p_new_d) then
              insert into apex$_ws_history (row_id, ws_app_id, data_grid_id, column_name, old_value,  new_value, change_date, application_user_id)
              values (p_row_id, p_ws_app_id, p_data_grid_id, p_col_name, p_old_d, p_new_d, sysdate, v('APP_USER'));
        	  end if;
        when 'N' then
          if (p_old_n is null and p_new_n is not null) or (p_old_n is not null and p_new_n is null) or (p_old_n != p_new_n) then
              insert into apex$_ws_history (row_id, ws_app_id, data_grid_id, column_name, old_value,  new_value, change_date, application_user_id)
              values (p_row_id, p_ws_app_id, p_data_grid_id, p_col_name, p_old_n, p_new_n, sysdate, v('APP_USER'));
          end if;
        end case;
    end datagrid_logging;
    procedure wa( p_c in out nocopy clob, p_buf in varchar2 )
    is
    l_lf varchar2(2) := unistr('\000a');
    begin
    if p_buf is not null then dbms_lob.writeappend( p_c, length(p_buf||l_lf), upper(p_buf)||l_lf); end if;
    end wa;
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.load_order from dual;
        :new.change_count := 0;
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        :new.change_count := :old.change_count + 1;
    end if;
    --
    -- inserting remove chr 13
    --
    if instr(:new.c001,chr(13)) > 0 then :new.c001 := replace(:new.c001,chr(13),null); end if;
    if instr(:new.c002,chr(13)) > 0 then :new.c002 := replace(:new.c002,chr(13),null); end if;
    if instr(:new.c003,chr(13)) > 0 then :new.c003 := replace(:new.c003,chr(13),null); end if;
    if instr(:new.c004,chr(13)) > 0 then :new.c004 := replace(:new.c004,chr(13),null); end if;
    if instr(:new.c005,chr(13)) > 0 then :new.c005 := replace(:new.c005,chr(13),null); end if;
    if instr(:new.c006,chr(13)) > 0 then :new.c006 := replace(:new.c006,chr(13),null); end if;
    if instr(:new.c007,chr(13)) > 0 then :new.c007 := replace(:new.c007,chr(13),null); end if;
    if instr(:new.c008,chr(13)) > 0 then :new.c008 := replace(:new.c008,chr(13),null); end if;
    if instr(:new.c009,chr(13)) > 0 then :new.c009 := replace(:new.c009,chr(13),null); end if;
    if instr(:new.c010,chr(13)) > 0 then :new.c010 := replace(:new.c010,chr(13),null); end if;
    if instr(:new.c011,chr(13)) > 0 then :new.c011 := replace(:new.c011,chr(13),null); end if;
    if instr(:new.c012,chr(13)) > 0 then :new.c012 := replace(:new.c012,chr(13),null); end if;
    if instr(:new.c013,chr(13)) > 0 then :new.c013 := replace(:new.c013,chr(13),null); end if;
    if instr(:new.c014,chr(13)) > 0 then :new.c014 := replace(:new.c014,chr(13),null); end if;
    if instr(:new.c015,chr(13)) > 0 then :new.c015 := replace(:new.c015,chr(13),null); end if;
    if instr(:new.c016,chr(13)) > 0 then :new.c016 := replace(:new.c016,chr(13),null); end if;
    if instr(:new.c017,chr(13)) > 0 then :new.c017 := replace(:new.c017,chr(13),null); end if;
    if instr(:new.c018,chr(13)) > 0 then :new.c018 := replace(:new.c018,chr(13),null); end if;
    if instr(:new.c019,chr(13)) > 0 then :new.c019 := replace(:new.c019,chr(13),null); end if;
    if instr(:new.c020,chr(13)) > 0 then :new.c020 := replace(:new.c010,chr(23),null); end if;
    if instr(:new.c021,chr(13)) > 0 then :new.c021 := replace(:new.c001,chr(23),null); end if;
    if instr(:new.c022,chr(13)) > 0 then :new.c022 := replace(:new.c002,chr(23),null); end if;
    if instr(:new.c023,chr(13)) > 0 then :new.c023 := replace(:new.c003,chr(23),null); end if;
    if instr(:new.c024,chr(13)) > 0 then :new.c024 := replace(:new.c004,chr(23),null); end if;
    if instr(:new.c025,chr(13)) > 0 then :new.c025 := replace(:new.c005,chr(23),null); end if;
    if instr(:new.c026,chr(13)) > 0 then :new.c026 := replace(:new.c006,chr(23),null); end if;
    if instr(:new.c027,chr(13)) > 0 then :new.c027 := replace(:new.c007,chr(23),null); end if;
    if instr(:new.c028,chr(13)) > 0 then :new.c028 := replace(:new.c008,chr(23),null); end if;
    if instr(:new.c029,chr(13)) > 0 then :new.c029 := replace(:new.c009,chr(23),null); end if;
    if instr(:new.c030,chr(13)) > 0 then :new.c030 := replace(:new.c030,chr(13),null); end if;
    if instr(:new.c031,chr(13)) > 0 then :new.c031 := replace(:new.c031,chr(13),null); end if;
    if instr(:new.c032,chr(13)) > 0 then :new.c032 := replace(:new.c032,chr(13),null); end if;
    if instr(:new.c033,chr(13)) > 0 then :new.c033 := replace(:new.c033,chr(13),null); end if;
    if instr(:new.c034,chr(13)) > 0 then :new.c034 := replace(:new.c034,chr(13),null); end if;
    if instr(:new.c035,chr(13)) > 0 then :new.c035 := replace(:new.c035,chr(13),null); end if;
    if instr(:new.c036,chr(13)) > 0 then :new.c036 := replace(:new.c036,chr(13),null); end if;
    if instr(:new.c037,chr(13)) > 0 then :new.c037 := replace(:new.c037,chr(13),null); end if;
    if instr(:new.c038,chr(13)) > 0 then :new.c038 := replace(:new.c038,chr(13),null); end if;
    if instr(:new.c039,chr(13)) > 0 then :new.c039 := replace(:new.c039,chr(13),null); end if;
    if instr(:new.c040,chr(13)) > 0 then :new.c040 := replace(:new.c040,chr(13),null); end if;
    if instr(:new.c041,chr(13)) > 0 then :new.c041 := replace(:new.c041,chr(13),null); end if;
    if instr(:new.c042,chr(13)) > 0 then :new.c042 := replace(:new.c042,chr(13),null); end if;
    if instr(:new.c043,chr(13)) > 0 then :new.c043 := replace(:new.c043,chr(13),null); end if;
    if instr(:new.c044,chr(13)) > 0 then :new.c044 := replace(:new.c044,chr(13),null); end if;
    if instr(:new.c045,chr(13)) > 0 then :new.c045 := replace(:new.c045,chr(13),null); end if;
    if instr(:new.c046,chr(13)) > 0 then :new.c046 := replace(:new.c046,chr(13),null); end if;
    if instr(:new.c047,chr(13)) > 0 then :new.c047 := replace(:new.c047,chr(13),null); end if;
    if instr(:new.c048,chr(13)) > 0 then :new.c048 := replace(:new.c048,chr(13),null); end if;
    if instr(:new.c049,chr(13)) > 0 then :new.c049 := replace(:new.c049,chr(13),null); end if;
    if instr(:new.c050,chr(13)) > 0 then :new.c050 := replace(:new.c050,chr(13),null); end if;
    if :new.search_clob is null then
        dbms_lob.createtemporary( :new.search_clob, false, dbms_lob.session );
    else
        dbms_lob.trim( :new.search_clob, 0 );
    end if;
    wa(:new.search_clob,:new.c001);wa(:new.search_clob,:new.c002);wa(:new.search_clob,:new.c003);
    wa(:new.search_clob,:new.c004);wa(:new.search_clob,:new.c005);wa(:new.search_clob,:new.c006);
    wa(:new.search_clob,:new.c007);wa(:new.search_clob,:new.c008);wa(:new.search_clob,:new.c009);
    wa(:new.search_clob,:new.c010);wa(:new.search_clob,:new.c011);wa(:new.search_clob,:new.c012);
    wa(:new.search_clob,:new.c013);wa(:new.search_clob,:new.c014);wa(:new.search_clob,:new.c015);
    wa(:new.search_clob,:new.c016);wa(:new.search_clob,:new.c017);wa(:new.search_clob,:new.c018);
    wa(:new.search_clob,:new.c019);wa(:new.search_clob,:new.c020);wa(:new.search_clob,:new.c021);
    wa(:new.search_clob,:new.c022);wa(:new.search_clob,:new.c023);wa(:new.search_clob,:new.c024);
    wa(:new.search_clob,:new.c025);wa(:new.search_clob,:new.c026);wa(:new.search_clob,:new.c027);
    wa(:new.search_clob,:new.c028);wa(:new.search_clob,:new.c029);wa(:new.search_clob,:new.c030);
    wa(:new.search_clob,:new.c031);wa(:new.search_clob,:new.c032);wa(:new.search_clob,:new.c033);
    wa(:new.search_clob,:new.c034);wa(:new.search_clob,:new.c035);wa(:new.search_clob,:new.c036);
    wa(:new.search_clob,:new.c037);wa(:new.search_clob,:new.c038);wa(:new.search_clob,:new.c039);
    wa(:new.search_clob,:new.c040);wa(:new.search_clob,:new.c041);wa(:new.search_clob,:new.c042);
    wa(:new.search_clob,:new.c043);wa(:new.search_clob,:new.c044);wa(:new.search_clob,:new.c045);
    wa(:new.search_clob,:new.c046);wa(:new.search_clob,:new.c047);wa(:new.search_clob,:new.c048);
    wa(:new.search_clob,:new.c049);wa(:new.search_clob,:new.c050);
    --
    -- history
    --
    if updating then
       -- initialize column label array
       for i in 1..50
       loop
           la_col_label('C'||to_char(i,'FM009')) := null;
           la_col_label('N'||to_char(i,'FM009')) := null;
           la_col_label('D'||to_char(i,'FM009')) := null;
       end loop;
       -- get column label array
       for c1 in (select column_alias, report_label 
                  from apex_ws_data_grid_col
                  where data_grid_id = :new.data_grid_id)
       loop
           la_col_label(c1.column_alias) := c1.report_label;
       end loop;
       -- strings
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C001'),'C',:old.c001,:new.c001);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C002'),'C',:old.c002,:new.c002);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C003'),'C',:old.c003,:new.c003);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C004'),'C',:old.c004,:new.c004);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C005'),'C',:old.c005,:new.c005);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C006'),'C',:old.c006,:new.c006);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C007'),'C',:old.c007,:new.c007);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C008'),'C',:old.c008,:new.c008);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C009'),'C',:old.c009,:new.c009);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C010'),'C',:old.c010,:new.c010);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C011'),'C',:old.c011,:new.c011);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C012'),'C',:old.c012,:new.c012);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C013'),'C',:old.c013,:new.c013);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C014'),'C',:old.c014,:new.c014);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C015'),'C',:old.c015,:new.c015);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C016'),'C',:old.c016,:new.c016);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C017'),'C',:old.c017,:new.c017);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C018'),'C',:old.c018,:new.c018);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C019'),'C',:old.c019,:new.c019);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C020'),'C',:old.c020,:new.c020);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C021'),'C',:old.c021,:new.c021);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C022'),'C',:old.c022,:new.c022);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C023'),'C',:old.c023,:new.c023);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C024'),'C',:old.c024,:new.c024);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C025'),'C',:old.c025,:new.c025);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C026'),'C',:old.c026,:new.c026);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C027'),'C',:old.c027,:new.c027);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C028'),'C',:old.c028,:new.c028);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C029'),'C',:old.c029,:new.c029);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C030'),'C',:old.c030,:new.c030);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C031'),'C',:old.c031,:new.c031);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C032'),'C',:old.c032,:new.c032);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C033'),'C',:old.c033,:new.c033);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C034'),'C',:old.c034,:new.c034);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C035'),'C',:old.c035,:new.c035);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C036'),'C',:old.c036,:new.c036);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C037'),'C',:old.c037,:new.c037);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C038'),'C',:old.c038,:new.c038);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C039'),'C',:old.c039,:new.c039);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C040'),'C',:old.c040,:new.c040);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C041'),'C',:old.c041,:new.c041);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C042'),'C',:old.c042,:new.c042);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C043'),'C',:old.c043,:new.c043);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C044'),'C',:old.c044,:new.c044);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C045'),'C',:old.c045,:new.c045);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C046'),'C',:old.c046,:new.c046);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C047'),'C',:old.c047,:new.c047);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C048'),'C',:old.c048,:new.c048);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C049'),'C',:old.c049,:new.c049);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C050'),'C',:old.c050,:new.c050);
       -- numbers
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N001'),'N',null,null,null,null,:old.n001,:new.n001);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N002'),'N',null,null,null,null,:old.n002,:new.n002);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N003'),'N',null,null,null,null,:old.n003,:new.n003);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N004'),'N',null,null,null,null,:old.n004,:new.n004);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N005'),'N',null,null,null,null,:old.n005,:new.n005);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N006'),'N',null,null,null,null,:old.n006,:new.n006);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N007'),'N',null,null,null,null,:old.n007,:new.n007);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N008'),'N',null,null,null,null,:old.n008,:new.n008);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N009'),'N',null,null,null,null,:old.n009,:new.n009);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N010'),'N',null,null,null,null,:old.n010,:new.n010);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N011'),'N',null,null,null,null,:old.n011,:new.n011);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N012'),'N',null,null,null,null,:old.n012,:new.n012);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N013'),'N',null,null,null,null,:old.n013,:new.n013);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N014'),'N',null,null,null,null,:old.n014,:new.n014);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N015'),'N',null,null,null,null,:old.n015,:new.n015);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N016'),'N',null,null,null,null,:old.n016,:new.n016);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N017'),'N',null,null,null,null,:old.n017,:new.n017);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N018'),'N',null,null,null,null,:old.n018,:new.n018);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N019'),'N',null,null,null,null,:old.n019,:new.n019);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N020'),'N',null,null,null,null,:old.n020,:new.n020);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N021'),'N',null,null,null,null,:old.n021,:new.n021);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N022'),'N',null,null,null,null,:old.n022,:new.n022);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N023'),'N',null,null,null,null,:old.n023,:new.n023);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N024'),'N',null,null,null,null,:old.n024,:new.n024);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N025'),'N',null,null,null,null,:old.n025,:new.n025);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N026'),'N',null,null,null,null,:old.n026,:new.n026);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N027'),'N',null,null,null,null,:old.n027,:new.n027);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N028'),'N',null,null,null,null,:old.n028,:new.n028);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N029'),'N',null,null,null,null,:old.n029,:new.n029);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N030'),'N',null,null,null,null,:old.n030,:new.n030);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N031'),'N',null,null,null,null,:old.n031,:new.n031);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N032'),'N',null,null,null,null,:old.n032,:new.n032);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N033'),'N',null,null,null,null,:old.n033,:new.n033);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N034'),'N',null,null,null,null,:old.n034,:new.n034);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N035'),'N',null,null,null,null,:old.n035,:new.n035);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N036'),'N',null,null,null,null,:old.n036,:new.n036);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N037'),'N',null,null,null,null,:old.n037,:new.n037);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N038'),'N',null,null,null,null,:old.n038,:new.n038);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N039'),'N',null,null,null,null,:old.n039,:new.n039);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N040'),'N',null,null,null,null,:old.n040,:new.n040);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N041'),'N',null,null,null,null,:old.n041,:new.n041);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N042'),'N',null,null,null,null,:old.n042,:new.n042);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N043'),'N',null,null,null,null,:old.n043,:new.n043);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N044'),'N',null,null,null,null,:old.n044,:new.n044);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N045'),'N',null,null,null,null,:old.n045,:new.n045);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N046'),'N',null,null,null,null,:old.n046,:new.n046);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N047'),'N',null,null,null,null,:old.n047,:new.n047);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N048'),'N',null,null,null,null,:old.n048,:new.n048);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N049'),'N',null,null,null,null,:old.n049,:new.n049);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N050'),'N',null,null,null,null,:old.n050,:new.n050);
       -- dates
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D001'),'D',null,null,:old.d001,:new.d001);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D002'),'D',null,null,:old.d002,:new.d002);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D003'),'D',null,null,:old.d003,:new.d003);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D004'),'D',null,null,:old.d004,:new.d004);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D005'),'D',null,null,:old.d005,:new.d005);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D006'),'D',null,null,:old.d006,:new.d006);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D007'),'D',null,null,:old.d007,:new.d007);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D008'),'D',null,null,:old.d008,:new.d008);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D009'),'D',null,null,:old.d009,:new.d009);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D010'),'D',null,null,:old.d010,:new.d010);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D011'),'D',null,null,:old.d011,:new.d011);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D012'),'D',null,null,:old.d012,:new.d012);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D013'),'D',null,null,:old.d013,:new.d013);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D014'),'D',null,null,:old.d014,:new.d014);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D015'),'D',null,null,:old.d015,:new.d015);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D016'),'D',null,null,:old.d016,:new.d016);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D017'),'D',null,null,:old.d017,:new.d017);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D018'),'D',null,null,:old.d018,:new.d018);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D019'),'D',null,null,:old.d019,:new.d019);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D020'),'D',null,null,:old.d020,:new.d020);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D021'),'D',null,null,:old.d021,:new.d021);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D022'),'D',null,null,:old.d022,:new.d022);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D023'),'D',null,null,:old.d023,:new.d023);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D024'),'D',null,null,:old.d024,:new.d024);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D025'),'D',null,null,:old.d025,:new.d025);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D026'),'D',null,null,:old.d026,:new.d026);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D027'),'D',null,null,:old.d027,:new.d027);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D028'),'D',null,null,:old.d028,:new.d028);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D029'),'D',null,null,:old.d029,:new.d029);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D030'),'D',null,null,:old.d030,:new.d030);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D031'),'D',null,null,:old.d031,:new.d031);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D032'),'D',null,null,:old.d032,:new.d032);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D033'),'D',null,null,:old.d033,:new.d033);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D034'),'D',null,null,:old.d034,:new.d034);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D035'),'D',null,null,:old.d035,:new.d035);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D036'),'D',null,null,:old.d036,:new.d036);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D037'),'D',null,null,:old.d037,:new.d037);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D038'),'D',null,null,:old.d038,:new.d038);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D039'),'D',null,null,:old.d039,:new.d039);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D040'),'D',null,null,:old.d040,:new.d040);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D041'),'D',null,null,:old.d041,:new.d041);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D042'),'D',null,null,:old.d042,:new.d042);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D043'),'D',null,null,:old.d043,:new.d043);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D044'),'D',null,null,:old.d044,:new.d044);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D045'),'D',null,null,:old.d045,:new.d045);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D046'),'D',null,null,:old.d046,:new.d046);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D047'),'D',null,null,:old.d047,:new.d047);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D048'),'D',null,null,:old.d048,:new.d048);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D049'),'D',null,null,:old.d049,:new.d049);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D050'),'D',null,null,:old.d050,:new.d050);
    end if;
    --
    -- set owner
    --
    if :new.owner is null then
        :new.owner := :new.created_by;
    end if;
end;

/
ALTER TRIGGER "T3"."APEX$_WS_ROWS_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APEX$_WS_TAGS_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "T3"."APEX$_WS_TAGS_T1" 
before insert or update on "APEX$_WS_TAGS"
for each row
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    end if;
end;
/
ALTER TRIGGER "T3"."APEX$_WS_TAGS_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APEX$_WS_WEBPG_SECTIONS_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "T3"."APEX$_WS_WEBPG_SECTIONS_T1" 
before insert or update on "APEX$_WS_WEBPG_SECTIONS"
for each row
declare
    l_sequence_changed varchar2(1) := 'N';
    l_title_changed varchar2(1) := 'N';
    l_content_changed varchar2(1) := 'N';
    procedure clob_upper( p_content in clob, p_content_upper in out nocopy clob)
    is
    l_buf varchar2(32767);
    l_off number;
    l_amt number;
    begin
    if p_content is not null then
        l_amt := 8000;
        l_off := 1;
         dbms_lob.trim( p_content_upper, 0);
         begin
             loop
                 dbms_lob.read( p_content, l_amt, l_off, l_buf );
                 l_buf := upper( l_buf );
                 dbms_lob.writeappend( p_content_upper, length(l_buf), l_buf);
                 l_off := l_off + l_amt;
                 l_amt := 8000;
             end loop;
         exception
             when no_data_found then null;
         end;
     end if;
end clob_upper;
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if :new.section_type = 'NAV_PAGE' then
        if :new.nav_include_link is null then
            :new.nav_include_link := 'Y';
        end if;
    end if;
    if inserting and :new.content is not null then
        dbms_lob.createtemporary( :new.content_upper, false, dbms_lob.call );
        clob_upper( :new.content, :new.content_upper );
    elsif updating then
        if :new.content_upper is null then
            dbms_lob.createtemporary( :new.content_upper, false, dbms_lob.call );
        end if;
        clob_upper( :new.content, :new.content_upper );
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        if nvl(:old.display_sequence,-999) != nvl(:new.display_sequence,-999) then
            l_sequence_changed := 'Y';
        end if;
        if nvl(:old.title,'jKKwZk') != nvl(:new.title,'jKKwZk') then
            l_title_changed := 'Y';
        end if;
        if dbms_lob.compare(:new.content,:old.content) != 0 or nvl(length(:new.content),0) != nvl(length(:old.content),0) then
            l_content_changed := 'Y';
        end if;
        if l_sequence_changed = 'Y' or l_title_changed = 'Y' or l_content_changed = 'Y' then
            insert into apex$_ws_webpg_section_history (section_id, ws_app_id, webpage_id, old_display_sequence, new_display_sequence,
            old_title, new_title, old_content, new_content, change_date, application_user_id)
            values (:new.id, :new.ws_app_id, :new.webpage_id,
                    decode(l_sequence_changed,'Y',:old.display_sequence,null), decode(l_sequence_changed,'Y',:new.display_sequence,null),
                    decode(l_title_changed,'Y',:old.title,null), decode(l_title_changed,'Y',:new.title,null),
                    decode(l_content_changed,'Y',:old.content,null), decode(l_content_changed,'Y',:new.content,null), sysdate, v('APP_USER'));
        end if;
    end if;
end;
/
ALTER TRIGGER "T3"."APEX$_WS_WEBPG_SECTIONS_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger BI_DEMO_USERS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "T3"."BI_DEMO_USERS" 
BEFORE
insert on "DEMO_USERS"
for each row
begin
begin
  for c1 in (
    select DEMO_USERS_SEQ.nextval next_val
    from dual
  ) loop
    :new.USER_ID :=  c1.next_val;
    :new.admin_user := 'N';
    :new.created_on := sysdate;
  end loop;
end;
end;
/
ALTER TRIGGER "T3"."BI_DEMO_USERS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEMO_ORDER_ITEMS_GET_PRICE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "T3"."DEMO_ORDER_ITEMS_GET_PRICE" 
before insert or update on demo_order_items for each row
declare
  l_list_price number;
begin
-- First, we need to get the current list price of the order line item
select list_price into l_list_price from demo_product_info
  where product_id = :new.product_id;

-- Once we have the correct price, we will update the order line with the correct price
:new.unit_price := l_list_price;

end;
/
ALTER TRIGGER "T3"."DEMO_ORDER_ITEMS_GET_PRICE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEMO_USERS_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "T3"."DEMO_USERS_T1" 
BEFORE
insert or update on "DEMO_USERS"
for each row
begin
:NEW.user_name := upper(:NEW.user_name);
end;
/
ALTER TRIGGER "T3"."DEMO_USERS_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DOWNTIME_TYPES_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "T3"."DOWNTIME_TYPES_TRG" 
BEFORE INSERT ON TBL_DOWNTIME_TYPES 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "T3"."DOWNTIME_TYPES_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INSERT_DEMO_CUST
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "T3"."INSERT_DEMO_CUST" 
BEFORE INSERT ON demo_customers
FOR EACH ROW
DECLARE
  cust_id number;
BEGIN
  SELECT demo_cust_seq.nextval
    INTO cust_id
    FROM dual;
  :new.CUSTOMER_ID := cust_id;
END;
/
ALTER TRIGGER "T3"."INSERT_DEMO_CUST" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INSERT_DEMO_ORDER_ITEMS
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "T3"."INSERT_DEMO_ORDER_ITEMS" 
BEFORE
insert on "DEMO_ORDER_ITEMS"
for each row
begin
declare
  order_item_id number;
begin
select demo_order_items_seq.nextval into order_item_id from dual;
:new.ORDER_ITEM_ID := order_item_id;
end;
end;
/
ALTER TRIGGER "T3"."INSERT_DEMO_ORDER_ITEMS" ENABLE;
--------------------------------------------------------
--  DDL for Trigger INSERT_DEMO_PROD
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "T3"."INSERT_DEMO_PROD" 
BEFORE INSERT ON demo_product_info
FOR EACH ROW
DECLARE
  prod_id number;
BEGIN
  SELECT demo_prod_seq.nextval
    INTO prod_id
    FROM dual;
  :new.PRODUCT_ID := prod_id;
END;
/
ALTER TRIGGER "T3"."INSERT_DEMO_PROD" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBL_ACTIVITY_DEATILS_TRIGGER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "T3"."TBL_ACTIVITY_DEATILS_TRIGGER" 
   before insert on "T3"."TBL_ACTIVITY_DETAILS" 
   for each row 
begin  
   if inserting then 
      if :NEW."ID" is null then 
         select TBL_ACTIVITY_DETAILS_PK_SEQ.nextval into :NEW."ID" from dual; 
      end if; 
   end if; 
end;

/
ALTER TRIGGER "T3"."TBL_ACTIVITY_DEATILS_TRIGGER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBL_ACTIVITY_DOWNTIME_PK_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "T3"."TBL_ACTIVITY_DOWNTIME_PK_TRG" 
   before insert on "T3"."TBL_ACTIVITY_DOWNTIME" 
   for each row 
begin  
   if inserting then 
      if :NEW."ID" is null then 
         select TBL_ACTIVITY_DOWNTIME_SEQ.nextval into :NEW."ID" from dual; 
      end if; 
   end if; 
end;

/
ALTER TRIGGER "T3"."TBL_ACTIVITY_DOWNTIME_PK_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBL_ACTIVITY_DOWNTIME_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "T3"."TBL_ACTIVITY_DOWNTIME_TRG" 
BEFORE INSERT ON TBL_ACTIVITY_DOWNTIME 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "T3"."TBL_ACTIVITY_DOWNTIME_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBL_ACTIVITY_PK_TRIGGER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "T3"."TBL_ACTIVITY_PK_TRIGGER" 
   before insert on "T3"."TBL_ACTIVITY" 
   for each row 
begin  
   if inserting then 
      if :NEW."ID" is null then 
         select TBL_ACTIVITY_PK_SEQ.nextval into :NEW."ID" from dual; 
      end if; 
   end if; 
end;

/
ALTER TRIGGER "T3"."TBL_ACTIVITY_PK_TRIGGER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBL_HEADER_PK_TRIGGER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "T3"."TBL_HEADER_PK_TRIGGER" 
   before insert on "T3"."TBL_HEADER" 
   for each row 
begin  
   if inserting then 
      if :NEW."ID" is null then 
         select TBL_HEADER_PK_SEQ.nextval into :NEW."ID" from dual; 
      end if; 
   end if; 
end;

/
ALTER TRIGGER "T3"."TBL_HEADER_PK_TRIGGER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBL_MANPOWER_PK_TRIGGER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "T3"."TBL_MANPOWER_PK_TRIGGER" 
   before insert on "T3"."TBL_MANPOWER" 
   for each row 
begin  
   if inserting then 
      if :NEW."ID" is null then 
         select TBL_MANPOWER_PK_SEQ.nextval into :NEW."ID" from dual; 
      end if; 
   end if; 
end;

/
ALTER TRIGGER "T3"."TBL_MANPOWER_PK_TRIGGER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TBL_MATERIAL_PK_TRIGGER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "T3"."TBL_MATERIAL_PK_TRIGGER" 
   before insert on "T3"."TBL_MATERIAL" 
   for each row 
begin  
   if inserting then 
      if :NEW."ID" is null then 
         select TBL_MATERIAL_PK_SEQ.nextval into :NEW."ID" from dual; 
      end if; 
   end if; 
end;

/
ALTER TRIGGER "T3"."TBL_MATERIAL_PK_TRIGGER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger UPDATE_ORDER_TOTAL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "T3"."UPDATE_ORDER_TOTAL" 
after insert or update or delete on demo_order_items
begin

-- Update the Order Total when any order item is changed

update demo_orders set order_total =
  (select sum(unit_price*quantity) from demo_order_items
    where demo_order_items.order_id = demo_orders.order_id);
end;
/
ALTER TRIGGER "T3"."UPDATE_ORDER_TOTAL" ENABLE;
--------------------------------------------------------
--  DDL for Package HEADER_PACKAGE
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "T3"."HEADER_PACKAGE" AS
--    type declarations
--    HEADER_REC TBL_HEADER%ROWTYPE;

--    function declarations
    FUNCTION GET_HEADER_BY_ID ( header_id IN tbl_header.id%TYPE) RETURN SYS_REFCURSOR;
    FUNCTION GET_ALL_HEADER RETURN SYS_REFCURSOR;
--    procedure declarations
    PROCEDURE STORE_HEADER( HEADER_DATA IN T3.HEADER_OBJ, REC_COUNT OUT NUMBER);
END HEADER_PACKAGE;

/
--------------------------------------------------------
--  DDL for Package T3_PACKAGE
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "T3"."T3_PACKAGE" AS 

    PROCEDURE STORE_ALL ( 
        obj_header IN T3.HEADER_OBJ
        , activities IN T3.ACTIVITY_COLLECTION
        , manpower IN T3.MANPOWER_COLLECTION
        , materials IN T3.MATERIAL_COLLECTION
        , output OUT NUMBER);
        
    PROCEDURE GET_ALL_BY_BARCODE (
        bar_code IN String
        , obj_header OUT T3.HEADER_OBJ
        , act_collection OUT T3.ACTIVITY_COLLECTION
        , manpower_collection OUT T3.MANPOWER_COLLECTION
        , material_collection OUT T3.MATERIAL_COLLECTION
    );
    
    PROCEDURE GET_HEADER_BY_BARCODE (
        bar_code IN String
        , res OUT SYS_REFCURSOR
    );
    
    PROCEDURE GET_DATA_BY_HEADER_ID (
        headerid IN Number
        , tablename IN String
        , res OUT SYS_REFCURSOR
    );
    
    PROCEDURE GET_ACTIVITY_DETAILS(
        activityid IN NUMBER
        , res OUT SYS_REFCURSOR
    );
    
    PROCEDURE GET_ACTIVITY_DOWNTIME(
        activityid IN NUMBER
        , res OUT SYS_REFCURSOR
    );
    
    PROCEDURE TODATE_SAMPLE(date IN string);
    
    PROCEDURE GET_DOWNTIME_TYPES (res OUT SYS_REFCURSOR);
--    PROCEDURE GET_MANPOWER_BY_HEADER_ID (
--        headerid IN Number
--        , res OUT SYS_REFCURSOR
--    );
END T3_PACKAGE;

/
--------------------------------------------------------
--  DDL for Package Body HEADER_PACKAGE
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "T3"."HEADER_PACKAGE" AS

    FUNCTION GET_HEADER_BY_ID ( header_id IN tbl_header.id%TYPE) RETURN SYS_REFCURSOR AS
        res SYS_REFCURSOR;
    BEGIN
        OPEN res FOR
        SELECT *
        FROM tbl_header
        WHERE tbl_header.id = header_id;
        RETURN res;
    END GET_HEADER_BY_ID;
  
    FUNCTION GET_ALL_HEADER RETURN SYS_REFCURSOR AS
        res SYS_REFCURSOR;
    BEGIN
        OPEN res FOR
        SELECT *
        FROM tbl_header;
        RETURN res;
    END GET_ALL_HEADER;
    
    PROCEDURE STORE_HEADER (header_data IN T3.HEADER_OBJ
                                , REC_COUNT OUT NUMBER) IS
    BEGIN
    
        INSERT INTO tbl_header VALUES (
            header_data.ID                  
            , header_data.BARCODE             
            , header_data.ACTUAL_START        
            , header_data.ACTUAL_END          
            , header_data.STATUS              
            , header_data.PO_NUMBER           
            , header_data.CONTROL_NUMBER      
            , header_data.SHIPPING_DATE       
            , header_data.ORDER_QUANTITY      
            , header_data.CUSTOMER            
            , header_data.CUSTOMER_CODE       
            , header_data.CUSTOMER_SPEC       
            , header_data.OLD_CODE            
            , header_data.INTERNAL_CODE       
            , header_data.PRODUCT_DESCRIPTION
            , header_data.SHIFT
            , header_data.SCHEDULE_DATE_START
            , header_data.SCHEDULE_DATE_END
        );
        REC_COUNT := SQL%rowcount;
        dbms_output.put_line  (REC_COUNT); 
    END STORE_HEADER;

END HEADER_PACKAGE;

/
--------------------------------------------------------
--  DDL for Package Body T3_PACKAGE
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "T3"."T3_PACKAGE" AS

    PROCEDURE STORE_ALL ( obj_header IN T3.HEADER_OBJ
                , activities IN T3.ACTIVITY_COLLECTION
                , manpower IN T3.MANPOWER_COLLECTION
                , materials IN T3.MATERIAL_COLLECTION
                , output OUT NUMBER) 
    AS
    OBJ_ACTIVITY T3.ACTIVITY_OBJ;
    OBJ_MANPOWER T3.MANPOWER_OBJ;
    OBJ_MATERIAL T3.MATERIAL_OBJ;
    OBJ_ACTIVITY_DETAILS T3.ACTIVITY_DETAILS_OBJ;
    COL_ACTIVITY_DETAILS T3.ACTIVITY_DETAILS_COLLECTION;
    OBJ_ACTIVITY_DOWNTIME T3.ACTIVITY_DOWNTIME_OBJ;    
    COL_ACTIVITY_DOWNTIME T3.ACTIVITY_DOWNTIME_COLLECTION;
    actid NUMBER;
    BEGIN
        if obj_header.IS_NEW = 1 then
            INSERT INTO tbl_header 
            VALUES ( obj_header.ID                  
                    , obj_header.BARCODE
                    , TO_DATE(obj_header.ACTUAL_START, 'DD-MON-YYYY HH24:MI:SS')
                    , TO_DATE(obj_header.ACTUAL_END, 'DD-MON-YYYY HH24:MI:SS')           
                    , obj_header.STATUS              
                    , obj_header.PO_NUMBER           
                    , obj_header.CONTROL_NUMBER
                    , TO_DATE(obj_header.SHIPPING_DATE, 'DD-MON-YYYY HH24:MI:SS')                      
                    , obj_header.ORDER_QUANTITY      
                    , obj_header.CUSTOMER            
                    , obj_header.CUSTOMER_CODE       
                    , obj_header.CUSTOMER_SPEC       
                    , obj_header.OLD_CODE            
                    , obj_header.INTERNAL_CODE       
                    , obj_header.PRODUCT_DESCRIPTION
                    , obj_header.SHIFT
                    , TO_DATE(obj_header.SCHEDULE_DATE_START, 'DD-MON-YYYY HH24:MI:SS')
                    , TO_DATE(obj_header.SCHEDULE_DATE_END, 'DD-MON-YYYY HH24:MI:SS')
                ) RETURNING ID INTO output;
        else
            if obj_header.IS_CHANGED = 1 then
                UPDATE tbl_header
                SET ACTUAL_END  = obj_header.ACTUAL_START,
                    STATUS      = obj_header.STATUS
                WHERE ID = obj_header.ID;
            end if;
            output := obj_header.ID;
        end if;

        for i in 1 .. activities.count loop
            OBJ_ACTIVITY := activities (i);
            if OBJ_ACTIVITY.IS_NEW = 1 then
                INSERT INTO tbl_activity
                VALUES (
                OBJ_ACTIVITY.ID
                , output
                , TO_DATE(OBJ_ACTIVITY.START_TIME, 'DD-MON-YYYY HH24:MI:SS')
                , TO_DATE(OBJ_ACTIVITY.END_TIME, 'DD-MON-YYYY HH24:MI:SS')
                , OBJ_ACTIVITY.DOWNTIME
                , OBJ_ACTIVITY.REMARKS
                , OBJ_ACTIVITY.LAST_UPDATED_BY
                , CURRENT_DATE
                , CURRENT_DATE
                ) RETURNING ID INTO actid;
            else
                if OBJ_ACTIVITY.IS_CHANGED = 1 then
                    UPDATE tbl_activity
                    SET START_TIME      = TO_DATE(OBJ_ACTIVITY.START_TIME, 'DD-MON-YYYY HH24:MI:SS'),
                        END_TIME        = TO_DATE(OBJ_ACTIVITY.END_TIME, 'DD-MON-YYYY HH24:MI:SS'),
                        DOWNTIME        = OBJ_ACTIVITY.DOWNTIME,
                        REMARKS         = OBJ_ACTIVITY.REMARKS,
                        DATE_UPDATED    = CURRENT_DATE
                    WHERE ID = OBJ_ACTIVITY.ID;
                end if;
                actid := OBJ_ACTIVITY.ID;
            end if;
            COL_ACTIVITY_DETAILS := OBJ_ACTIVITY.ACTIVITY_DETAILS;
            for ii in 1 .. COL_ACTIVITY_DETAILS.count loop
                dbms_output.put_line('lallaa');
                OBJ_ACTIVITY_DETAILS := COL_ACTIVITY_DETAILS (ii);
                if OBJ_ACTIVITY_DETAILS.IS_NEW = 1 then
                    INSERT INTO tbl_activity_details
                    VALUES (
                        OBJ_ACTIVITY_DETAILS.ID
                        , actid
                        , OBJ_ACTIVITY_DETAILS.LOT_NUMBER
                        , OBJ_ACTIVITY_DETAILS.PACKED_QTY
                        , OBJ_ACTIVITY_DETAILS.ADJ_QTY
                    );
                else
                    if OBJ_ACTIVITY_DETAILS.IS_CHANGED = 1 then
                        UPDATE tbl_activity_details
                        SET LOT_NUMBER  = OBJ_ACTIVITY_DETAILS.LOT_NUMBER,
                            PACKED_QTY  = OBJ_ACTIVITY_DETAILS.PACKED_QTY,
                            ADJ_QTY  = OBJ_ACTIVITY_DETAILS.ADJ_QTY
                        WHERE ID = OBJ_ACTIVITY_DETAILS.ID;
                    end if;
                end if;
            end loop;
            COL_ACTIVITY_DOWNTIME := OBJ_ACTIVITY.ACTIVITY_DOWNTIME;
            for ii in 1 .. COL_ACTIVITY_DOWNTIME.count loop
                dbms_output.put_line('lallaa');
                OBJ_ACTIVITY_DOWNTIME := COL_ACTIVITY_DOWNTIME (ii);
                if OBJ_ACTIVITY_DOWNTIME.IS_NEW = 1 then
                    INSERT INTO tbl_activity_downtime
                    VALUES (
                        OBJ_ACTIVITY_DOWNTIME.ID
                        , OBJ_ACTIVITY_DOWNTIME.DOWNTIME_TYPE_ID
                        , OBJ_ACTIVITY_DOWNTIME.MINUTES
                        , OBJ_ACTIVITY_DOWNTIME.REMARKS
                        , OBJ_ACTIVITY_DOWNTIME.QUANTITY
                        , actid
                        , OBJ_ACTIVITY_DOWNTIME.CREATED_BY
                        , CURRENT_DATE
                    );
                else
                    if OBJ_ACTIVITY_DOWNTIME.IS_CHANGED = 1 then
                        UPDATE tbl_activity_downtime
                        SET DOWNTIME_TYPE_ID    = OBJ_ACTIVITY_DOWNTIME.DOWNTIME_TYPE_ID
                            , MINUTES           = OBJ_ACTIVITY_DOWNTIME.MINUTES
                            , REMARKS           = OBJ_ACTIVITY_DOWNTIME.REMARKS
                            , QUANTITY          = OBJ_ACTIVITY_DOWNTIME.QUANTITY
                        WHERE ID = OBJ_ACTIVITY_DOWNTIME.ID;
                    end if;
                end if;
            end loop;            
        end loop;
        --        REC_COUNT := SQL%rowcount;
--        for i in 1 .. manpower.count loop
--            OBJ_MANPOWER := manpower (i);
--            INSERT INTO TBL_MANPOWER
--            VALUES (
--            OBJ_MANPOWER.ID
--            ,OBJ_MANPOWER.POSITION_ID
--            ,OBJ_MANPOWER.MANPOWER_ID
--            ,OBJ_MANPOWER.START_TIME
--            ,OBJ_MANPOWER.END_TIME
--            ,OBJ_MANPOWER.REMARKS
--            ,OBJ_MANPOWER.LAST_UPDATED_BY
--            ,OBJ_MANPOWER.DATE_ENTERED
--            ,OBJ_MANPOWER.DATE_UPDATED
--            , output
--        );
--        end loop;    
--        
        for i in 1 .. materials.count loop
            OBJ_MATERIAL := materials (i);
            if OBJ_MATERIAL.IS_NEW = 1 then
                INSERT INTO TBL_MATERIAL
                VALUES (
                    OBJ_MATERIAL.ID
                    ,OBJ_MATERIAL.QUANTITY
                    ,OBJ_MATERIAL.STANDARD
                    ,OBJ_MATERIAL.REQUIREMENTS
                    ,OBJ_MATERIAL.USED
                    ,OBJ_MATERIAL.REJECT
                    ,OBJ_MATERIAL.REMARKS
                    ,OBJ_MATERIAL.LAST_UPDATED_BY
                    ,CURRENT_DATE
                    ,CURRENT_DATE
                    ,OBJ_MATERIAL.MATERIAL_CODE
                    ,output
                    ,OBJ_MATERIAL.ITEM_CATEGORY
                    ,OBJ_MATERIAL.BOX_TYPE
                    ,OBJ_MATERIAL.MAX_QTY
                    ,OBJ_MATERIAL.MATERIAL_DESC
                );
            else
                if OBJ_MATERIAL.IS_CHANGED = 1 then
                    UPDATE TBL_MATERIAL
                    SET USED = OBJ_MATERIAL.USED,
                        REJECT = OBJ_MATERIAL.REJECT,
                        REMARKS = OBJ_MATERIAL.REMARKS,
                        LAST_UPDATED_BY = OBJ_MATERIAL.LAST_UPDATED_BY,
                        DATE_UPDATED = CURRENT_DATE
                    WHERE ID = OBJ_MATERIAL.ID;
                end if;
            end if;
        end loop;       
        
    END STORE_ALL;

    PROCEDURE GET_ALL_BY_BARCODE (
        bar_code IN String
        , obj_header OUT T3.HEADER_OBJ
        , act_collection OUT T3.ACTIVITY_COLLECTION
        , manpower_collection OUT T3.MANPOWER_COLLECTION
        , material_collection OUT T3.MATERIAL_COLLECTION
    ) AS
    BEGIN
        SELECT  T3.HEADER_OBJ (
            ID
            ,BARCODE
            ,ACTUAL_START
            ,ACTUAL_END
            ,STATUS
            ,PO_NUMBER
            ,CONTROL_NUMBER
            ,SHIPPING_DATE
            ,ORDER_QUANTITY
            ,CUSTOMER
            ,CUSTOMER_CODE
            ,CUSTOMER_SPEC
            ,OLD_CODE
            ,INTERNAL_CODE
            ,PRODUCT_DESCRIPTION
            ,SHIFT
            ,SCHEDULE_DATE_START
            ,SCHEDULE_DATE_END
            ,0
            ,0
        )
        INTO obj_header
        FROM TBL_HEADER
        WHERE BARCODE = bar_code;
        
        SELECT T3.ACTIVITY_OBJ (
            ID
            ,HEADER_ID
            ,START_TIME
            ,END_TIME
            ,DOWNTIME
            ,REMARKS
            ,LAST_UPDATED_BY
            ,DATE_ENTERED
            ,DATE_UPDATED
            ,0
            ,0
        )
        BULK COLLECT INTO act_collection
        FROM TBL_ACTIVITY
        WHERE HEADER_ID = obj_header.ID;
        
        SELECT T3.MANPOWER_OBJ (
            ID
            ,POSITION_ID
            ,MANPOWER_ID
            ,START_TIME
            ,END_TIME
            ,REMARKS
            ,LAST_UPDATED_BY
            ,DATE_ENTERED
            ,DATE_UPDATED
            ,HEADER_ID
        )
        BULK COLLECT INTO manpower_collection
        FROM TBL_MANPOWER
        WHERE HEADER_ID = obj_header.ID;
        
        SELECT T3.MATERIAL_OBJ (
            ID
            ,QUANTITY
            ,STANDARD
            ,REQUIREMENTS
            ,USED
            ,REJECT
            ,REMARKS
            ,LAST_UPDATED_BY
            ,DATE_ENTERED
            ,DATE_UPDATED
            ,MATERIAL_CODE
            ,HEADER_ID
            ,ITEM_CATEGORY
            ,BOX_TYPE
            ,MAX_QTY
            ,MATERIAL_DESC
            ,0
            ,0
        )
        BULK COLLECT INTO material_collection
        FROM TBL_MATERIAL
        WHERE HEADER_ID = obj_header.ID;
    END GET_ALL_BY_BARCODE;

    PROCEDURE GET_HEADER_BY_BARCODE (
        bar_code IN String
        , res OUT SYS_REFCURSOR
    ) AS
    BEGIN
        OPEN res FOR
        SELECT h.*, (0) AS IS_NEW, (0) AS IS_CHANGED
        FROM TBL_HEADER h
        WHERE BARCODE = bar_code;
    END GET_HEADER_BY_BARCODE;
    
    PROCEDURE GET_DATA_BY_HEADER_ID (
        headerid IN Number
        , tablename IN String
        , res OUT SYS_REFCURSOR
    ) AS
        sort_by String(255);     
    BEGIN
        sort_by := '';
        IF tablename = 'TBL_ACTIVITY' THEN
            sort_by := ' ORDER BY START_TIME DESC, END_TIME DESC';
        END IF;
        OPEN res FOR 'SELECT t.*, (0) AS IS_NEW, (0) AS IS_CHANGED FROM ' || tablename || ' t WHERE t.HEADER_ID = ' || headerid || sort_by;
    END GET_DATA_BY_HEADER_ID;

    PROCEDURE GET_ACTIVITY_DETAILS(
        activityid IN NUMBER
        , res OUT SYS_REFCURSOR
    ) AS
    BEGIN
        OPEN res FOR
        SELECT t.*, (0) AS IS_NEW, (0) AS IS_CHANGED
        FROM tbl_activity_details t
        WHERE ACTIVITY_ID = activityid;
    END GET_ACTIVITY_DETAILS;
    
    PROCEDURE GET_ACTIVITY_DOWNTIME(
        activityid IN NUMBER
        , res OUT SYS_REFCURSOR
    ) AS
    BEGIN
        OPEN res FOR
        SELECT ad.*, dt.NAME as DOWNTIME, (0) AS IS_NEW, (0) AS IS_CHANGED
        FROM tbl_activity_downtime ad
        LEFT JOIN tbl_downtime_types dt ON dt.ID = ad.DOWNTIME_TYPE_ID
        WHERE ACTIVITY_ID = activityid;
    END GET_ACTIVITY_DOWNTIME;    

    PROCEDURE TODATE_SAMPLE(date IN String) AS
    BEGIN
        dbms_output.put_line(to_timestamp(date, 'YYYY-MM-DD"T"HH24:MI:SS'));
    END TODATE_SAMPLE;

    PROCEDURE GET_DOWNTIME_TYPES (res OUT SYS_REFCURSOR) AS
    BEGIN
        OPEN res FOR
        SELECT dt.*
        FROM tbl_downtime_types dt;
    END GET_DOWNTIME_TYPES;

END T3_PACKAGE;

/
--------------------------------------------------------
--  DDL for Function CUSTOM_AUTH
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "T3"."CUSTOM_AUTH" (p_username in VARCHAR2, p_password in VARCHAR2)
return BOOLEAN
is
  l_password varchar2(4000);
  l_stored_password varchar2(4000);
  l_expires_on date;
  l_count number;
begin
-- First, check to see if the user is in the user table
select count(*) into l_count from demo_users where user_name = p_username;
if l_count > 0 then
  -- First, we fetch the stored hashed password & expire date
  select password, expires_on into l_stored_password, l_expires_on
   from demo_users where user_name = p_username;

  -- Next, we check to see if the user's account is expired
  -- If it is, return FALSE
  if l_expires_on > sysdate or l_expires_on is null then

    -- If the account is not expired, we have to apply the custom hash
    -- function to the password
    l_password := custom_hash(p_username, p_password);

    -- Finally, we compare them to see if they are the same and return
    -- either TRUE or FALSE
    if l_password = l_stored_password then
      return true;
    else
      return false;
    end if;
  else
    return false;
  end if;
else
  -- The username provided is not in the DEMO_USERS table
  return false;
end if;
end;

/
--------------------------------------------------------
--  DDL for Function CUSTOM_HASH
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "T3"."CUSTOM_HASH" (p_username in varchar2, p_password in varchar2)
return varchar2
is
  l_password varchar2(4000);
  l_salt varchar2(4000) := 'MLUUJB2E9XHLKBAXTGXE4G8T0X9DRA';
begin

-- This function should be wrapped, as the hash algorhythm is exposed here.
-- You can change the value of l_salt or the method of which to call the
-- DBMS_OBFUSCATOIN toolkit, but you much reset all of your passwords
-- if you choose to do this.

l_password := utl_raw.cast_to_raw(dbms_obfuscation_toolkit.md5
  (input_string => p_password || substr(l_salt,10,13) || p_username ||
    substr(l_salt, 4,10)));
return l_password;
end;

/
--------------------------------------------------------
--  Constraints for Table DEMO_ORDERS
--------------------------------------------------------

  ALTER TABLE "T3"."DEMO_ORDERS" ADD CONSTRAINT "DEMO_ORDER_PK" PRIMARY KEY ("ORDER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "T3"."DEMO_ORDERS" ADD CONSTRAINT "DEMO_ORDER_TOTAL_MIN" CHECK (order_total >= 0) ENABLE;
  ALTER TABLE "T3"."DEMO_ORDERS" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
  ALTER TABLE "T3"."DEMO_ORDERS" MODIFY ("ORDER_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APEX$_WS_NOTES
--------------------------------------------------------

  ALTER TABLE "T3"."APEX$_WS_NOTES" ADD CONSTRAINT "APEX$_WS_NOTES_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "T3"."APEX$_WS_NOTES" ADD CONSTRAINT "APEX$_WS_NOTES_CL_CK" CHECK (component_level in ('WEBSHEET','ROW','WORKSPACE','WEBPAGE')) ENABLE;
  ALTER TABLE "T3"."APEX$_WS_NOTES" MODIFY ("CREATED_BY" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_NOTES" MODIFY ("CREATED_ON" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_NOTES" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APEX$_WS_ROWS
--------------------------------------------------------

  ALTER TABLE "T3"."APEX$_WS_ROWS" ADD CONSTRAINT "APEX$_WS_ROWS_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "T3"."APEX$_WS_ROWS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_ROWS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_ROWS" MODIFY ("DATA_GRID_ID" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_ROWS" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_ROWS" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TBL_ACTIVITY
--------------------------------------------------------

  ALTER TABLE "T3"."TBL_ACTIVITY" MODIFY ("DATE_ENTERED" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_ACTIVITY" MODIFY ("LAST_UPDATED_BY" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_ACTIVITY" MODIFY ("HEADER_ID" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_ACTIVITY" ADD CONSTRAINT "TBL_ACTIVITY_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "T3"."TBL_ACTIVITY" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEMO_USERS
--------------------------------------------------------

  ALTER TABLE "T3"."DEMO_USERS" ADD CONSTRAINT "DEMO_USERS_PK" PRIMARY KEY ("USER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table APEX$_WS_TAGS
--------------------------------------------------------

  ALTER TABLE "T3"."APEX$_WS_TAGS" ADD CONSTRAINT "APEX$_WS_TAGS_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "T3"."APEX$_WS_TAGS" ADD CONSTRAINT "APEX$_WS_TAGS_CL_CK" CHECK (component_level in ('WEBSHEET','ROW','WORKSPACE','WEBPAGE')) ENABLE;
  ALTER TABLE "T3"."APEX$_WS_TAGS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_TAGS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_TAGS" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEPT
--------------------------------------------------------

  ALTER TABLE "T3"."DEPT" ADD PRIMARY KEY ("DEPTNO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table APEX$_ACL
--------------------------------------------------------

  ALTER TABLE "T3"."APEX$_ACL" ADD CONSTRAINT "APEX$_ACL_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "T3"."APEX$_ACL" ADD CONSTRAINT "APEX$_ACL_PRIV_CK" CHECK (priv in ('R','C','A')) ENABLE;
  ALTER TABLE "T3"."APEX$_ACL" MODIFY ("CREATED_BY" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_ACL" MODIFY ("CREATED_ON" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_ACL" MODIFY ("PRIV" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_ACL" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_ACL" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_ACL" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TBL_HEADER
--------------------------------------------------------

  ALTER TABLE "T3"."TBL_HEADER" MODIFY ("ACTUAL_START" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_HEADER" MODIFY ("BARCODE" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_HEADER" MODIFY ("CUSTOMER_SPEC" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_HEADER" MODIFY ("CUSTOMER_CODE" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_HEADER" MODIFY ("CUSTOMER" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_HEADER" MODIFY ("ORDER_QUANTITY" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_HEADER" MODIFY ("CONTROL_NUMBER" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_HEADER" MODIFY ("PO_NUMBER" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_HEADER" ADD CONSTRAINT "TBL_HEADER_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "T3"."TBL_HEADER" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TBL_ACTIVITY_DOWNTIME
--------------------------------------------------------

  ALTER TABLE "T3"."TBL_ACTIVITY_DOWNTIME" MODIFY ("CREATED_BY" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_ACTIVITY_DOWNTIME" MODIFY ("ACTIVITY_ID" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_ACTIVITY_DOWNTIME" ADD CONSTRAINT "TBL_ACTIVITY_DOWNTIME_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "T3"."TBL_ACTIVITY_DOWNTIME" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_ACTIVITY_DOWNTIME" MODIFY ("MINUTES" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_ACTIVITY_DOWNTIME" MODIFY ("DOWNTIME_TYPE_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TBL_DOWNTIME_TYPES
--------------------------------------------------------

  ALTER TABLE "T3"."TBL_DOWNTIME_TYPES" ADD CONSTRAINT "DOWNTIME_TYPES_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "T3"."TBL_DOWNTIME_TYPES" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_DOWNTIME_TYPES" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TBL_ACTIVITY_DETAILS
--------------------------------------------------------

  ALTER TABLE "T3"."TBL_ACTIVITY_DETAILS" ADD CONSTRAINT "TBL_ACTIVITY_DETAILS_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "T3"."TBL_ACTIVITY_DETAILS" MODIFY ("ADJ_QTY" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_ACTIVITY_DETAILS" MODIFY ("PACKED_QTY" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_ACTIVITY_DETAILS" MODIFY ("ACTIVITY_ID" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_ACTIVITY_DETAILS" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APEX$_WS_HISTORY
--------------------------------------------------------

  ALTER TABLE "T3"."APEX$_WS_HISTORY" MODIFY ("DATA_GRID_ID" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_HISTORY" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_HISTORY" MODIFY ("ROW_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEMO_PRODUCT_INFO
--------------------------------------------------------

  ALTER TABLE "T3"."DEMO_PRODUCT_INFO" ADD CONSTRAINT "DEMO_PRODUCT_INFO_PK" PRIMARY KEY ("PRODUCT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "T3"."DEMO_PRODUCT_INFO" MODIFY ("PRODUCT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEMO_CUSTOMERS
--------------------------------------------------------

  ALTER TABLE "T3"."DEMO_CUSTOMERS" ADD CONSTRAINT "DEMO_CUSTOMERS_PK" PRIMARY KEY ("CUSTOMER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "T3"."DEMO_CUSTOMERS" ADD CONSTRAINT "DEMO_CUST_CREDIT_LIMIT_MAX" CHECK (credit_limit <= 5000) ENABLE;
  ALTER TABLE "T3"."DEMO_CUSTOMERS" MODIFY ("CUST_LAST_NAME" NOT NULL ENABLE);
  ALTER TABLE "T3"."DEMO_CUSTOMERS" MODIFY ("CUST_FIRST_NAME" NOT NULL ENABLE);
  ALTER TABLE "T3"."DEMO_CUSTOMERS" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APEX$_WS_WEBPG_SECTIONS
--------------------------------------------------------

  ALTER TABLE "T3"."APEX$_WS_WEBPG_SECTIONS" ADD CONSTRAINT "APEX$_WS_WEBPG_SECTIONS_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "T3"."APEX$_WS_WEBPG_SECTIONS" ADD CONSTRAINT "APEX$_WS_WEBPG_SECTION_3D_CK" CHECK (chart_3d in ('Y','N')) ENABLE;
  ALTER TABLE "T3"."APEX$_WS_WEBPG_SECTIONS" ADD CONSTRAINT "APEX$_WS_WEBPG_SECTION_LINK_CK" CHECK (nav_include_link in ('Y','N')) ENABLE;
  ALTER TABLE "T3"."APEX$_WS_WEBPG_SECTIONS" ADD CONSTRAINT "APEX$_WS_WEBPG_SECTION_TYPE_CK" CHECK (section_type in ('TEXT','DATA','CHART','NAV_PAGE','NAV_SECTION')) ENABLE;
  ALTER TABLE "T3"."APEX$_WS_WEBPG_SECTIONS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_WEBPG_SECTIONS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_WEBPG_SECTIONS" MODIFY ("SECTION_TYPE" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_WEBPG_SECTIONS" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_WEBPG_SECTIONS" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APEX$_WS_WEBPG_SECTION_HISTORY
--------------------------------------------------------

  ALTER TABLE "T3"."APEX$_WS_WEBPG_SECTION_HISTORY" MODIFY ("CHANGE_DATE" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_WEBPG_SECTION_HISTORY" MODIFY ("APPLICATION_USER_ID" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_WEBPG_SECTION_HISTORY" MODIFY ("WEBPAGE_ID" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_WEBPG_SECTION_HISTORY" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_WEBPG_SECTION_HISTORY" MODIFY ("SECTION_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TBL_MATERIAL
--------------------------------------------------------

  ALTER TABLE "T3"."TBL_MATERIAL" MODIFY ("HEADER_ID" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_MATERIAL" MODIFY ("MATERIAL_CODE" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_MATERIAL" MODIFY ("DATE_ENTERED" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_MATERIAL" MODIFY ("REQUIREMENTS" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_MATERIAL" MODIFY ("STANDARD" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_MATERIAL" MODIFY ("QUANTITY" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_MATERIAL" ADD CONSTRAINT "TBL_MATERIAL_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "T3"."TBL_MATERIAL" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APEX$_WS_LINKS
--------------------------------------------------------

  ALTER TABLE "T3"."APEX$_WS_LINKS" ADD CONSTRAINT "APEX$_WS_LINKS_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "T3"."APEX$_WS_LINKS" ADD CONSTRAINT "APEX$_WS_LINKS_SH_CK" CHECK (show_on_homepage in ('Y','N')) ENABLE;
  ALTER TABLE "T3"."APEX$_WS_LINKS" ADD CONSTRAINT "APEX$_WS_LINKS_CL_CK" CHECK (component_level in ('WEBSHEET','ROW','WORKSPACE','WEBPAGE')) ENABLE;
  ALTER TABLE "T3"."APEX$_WS_LINKS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_LINKS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_LINKS" MODIFY ("URL" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_LINKS" MODIFY ("LINK_NAME" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_LINKS" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APEX$_WS_FILES
--------------------------------------------------------

  ALTER TABLE "T3"."APEX$_WS_FILES" ADD CONSTRAINT "APEX$_WS_FILES_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "T3"."APEX$_WS_FILES" ADD CONSTRAINT "APEX$_WS_FILES_CL_CK" CHECK (component_level in ('WEBSHEET','ROW','WORKSPACE','WEBPAGE')) ENABLE;
  ALTER TABLE "T3"."APEX$_WS_FILES" MODIFY ("CREATED_BY" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_FILES" MODIFY ("CREATED_ON" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_FILES" MODIFY ("MIME_TYPE" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_FILES" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "T3"."APEX$_WS_FILES" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TBL_MANPOWER
--------------------------------------------------------

  ALTER TABLE "T3"."TBL_MANPOWER" MODIFY ("HEADER_ID" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_MANPOWER" ADD CONSTRAINT "TBL_MANPOWER_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "T3"."TBL_MANPOWER" MODIFY ("DATE_ENTERED" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_MANPOWER" MODIFY ("START_TIME" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_MANPOWER" MODIFY ("MANPOWER_ID" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_MANPOWER" MODIFY ("POSITION_ID" NOT NULL ENABLE);
  ALTER TABLE "T3"."TBL_MANPOWER" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EMP
--------------------------------------------------------

  ALTER TABLE "T3"."EMP" ADD PRIMARY KEY ("EMPNO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "T3"."EMP" MODIFY ("EMPNO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DEMO_ORDER_ITEMS
--------------------------------------------------------

  ALTER TABLE "T3"."DEMO_ORDER_ITEMS" ADD CONSTRAINT "DEMO_ORDER_ITEMS_PK" PRIMARY KEY ("ORDER_ITEM_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "T3"."DEMO_ORDER_ITEMS" MODIFY ("QUANTITY" NOT NULL ENABLE);
  ALTER TABLE "T3"."DEMO_ORDER_ITEMS" MODIFY ("UNIT_PRICE" NOT NULL ENABLE);
  ALTER TABLE "T3"."DEMO_ORDER_ITEMS" MODIFY ("PRODUCT_ID" NOT NULL ENABLE);
  ALTER TABLE "T3"."DEMO_ORDER_ITEMS" MODIFY ("ORDER_ID" NOT NULL ENABLE);
  ALTER TABLE "T3"."DEMO_ORDER_ITEMS" MODIFY ("ORDER_ITEM_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table APEX$_WS_FILES
--------------------------------------------------------

  ALTER TABLE "T3"."APEX$_WS_FILES" ADD CONSTRAINT "APEX$_WS_FILES_FK" FOREIGN KEY ("ROW_ID")
	  REFERENCES "T3"."APEX$_WS_ROWS" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table APEX$_WS_LINKS
--------------------------------------------------------

  ALTER TABLE "T3"."APEX$_WS_LINKS" ADD CONSTRAINT "APEX$_WS_LINKS_FK" FOREIGN KEY ("ROW_ID")
	  REFERENCES "T3"."APEX$_WS_ROWS" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table APEX$_WS_NOTES
--------------------------------------------------------

  ALTER TABLE "T3"."APEX$_WS_NOTES" ADD CONSTRAINT "APEX$_WS_NOTES_FK" FOREIGN KEY ("ROW_ID")
	  REFERENCES "T3"."APEX$_WS_ROWS" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table APEX$_WS_TAGS
--------------------------------------------------------

  ALTER TABLE "T3"."APEX$_WS_TAGS" ADD CONSTRAINT "APEX$_WS_TAGS_FK" FOREIGN KEY ("ROW_ID")
	  REFERENCES "T3"."APEX$_WS_ROWS" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DEMO_ORDERS
--------------------------------------------------------

  ALTER TABLE "T3"."DEMO_ORDERS" ADD CONSTRAINT "DEMO_ORDERS_CUSTOMER_ID_FK" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "T3"."DEMO_CUSTOMERS" ("CUSTOMER_ID") ENABLE;
  ALTER TABLE "T3"."DEMO_ORDERS" ADD CONSTRAINT "DEMO_ORDERS_USER_ID_FK" FOREIGN KEY ("USER_ID")
	  REFERENCES "T3"."DEMO_USERS" ("USER_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DEMO_ORDER_ITEMS
--------------------------------------------------------

  ALTER TABLE "T3"."DEMO_ORDER_ITEMS" ADD CONSTRAINT "DEMO_ORDER_ITEMS_FK" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "T3"."DEMO_ORDERS" ("ORDER_ID") ON DELETE CASCADE ENABLE;
  ALTER TABLE "T3"."DEMO_ORDER_ITEMS" ADD CONSTRAINT "DEMO_ORDER_ITEMS_PRODUCT_ID_FK" FOREIGN KEY ("PRODUCT_ID")
	  REFERENCES "T3"."DEMO_PRODUCT_INFO" ("PRODUCT_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EMP
--------------------------------------------------------

  ALTER TABLE "T3"."EMP" ADD FOREIGN KEY ("MGR")
	  REFERENCES "T3"."EMP" ("EMPNO") ENABLE;
  ALTER TABLE "T3"."EMP" ADD FOREIGN KEY ("DEPTNO")
	  REFERENCES "T3"."DEPT" ("DEPTNO") ENABLE;
